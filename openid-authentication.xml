<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<rfc category="info" ipr="full3978" docName="openid-authentication-2_0.xml">

  <?rfc toc="yes" ?>
  <?rfc tocdepth="2" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc strict="yes" ?>
  <?rfc iprnotified="no" ?>
  <?rfc private="Final" ?>

  <front>
    <title>OpenID Authentication 2.0 - 最終版</title>

    <author initials="" surname="specs@openid.net" fullname="specs@openid.net">
      <organization />
    </author>

    <date month="December" year="2007"/>

    <abstract> 
      <t>
        OpenID 認証は、エンドユーザが識別子  (Identifier)  を管理していることを証明する方法を提供するものである。OpenID 認証を利用すれば、リライングパーティー (Relying Party、以下 RP) はエンドユーザのパスワードやメールアドレスなどにアクセスする必要がなくなる。
        <!--
        OpenID Authentication provides a way to prove that an end user
        controls an Identifier. It does this without the Relying Party
        needing access to end user credentials such as a password or
        to other sensitive information such as an email address.
        -->
      </t>

      <t>
        OpenID は、分散方式であり、RP や OpenID プロバイダ (OpenID Provider 、以下 OP) の承認・登録を行なう中央集権的な機関は存在しない。エンドユーザは利用する OP を自由に選択することができ、OP を変更しても自身の識別子をそのまま継続して利用することができる。
        <!--
        OpenID is decentralized. No central authority must approve or
        register Relying Parties or OpenID Providers. An end user
        can freely choose which OpenID Provider to use, and can
        preserve their Identifier if they switch OpenID Providers.
        -->
      </t>

      <t>
        プロトコル自体は JavaScript や最新ブラウザを必要としないが、AJAX を利用しても認証 (authentication) の仕組みは上手く機能する。つまり、エンドユーザは、現在のウェブページから離れずに、RP に自らの身元を証明できるのである。
        <!--
        While nothing in the protocol requires JavaScript or modern
        browsers, the authentication scheme plays nicely with
        "AJAX"-style setups. This means an end user can prove their
        Identity to a Relying Party without having to leave their
        current Web page.
        -->
      </t>

      <t>
        OpenID 認証は、HTTP(S) の標準的な要求／応答だけを用いているため、ユーザエージェント (User-Agent) やクライアントソフトウェアが特別な機能を備えている必要はない。OpenID は、cookie をはじめ、RP や OP 特有のセッション管理方法には全く依存していない。ユーザエージェントの機能拡張により、エンドユーザの操作を簡素化できるが、プロトコル利用上は必ずしも必要ではない。
        <!--
        OpenID Authentication uses only standard HTTP(S) requests and
        responses, so it does not require any special capabilities of
        the User-Agent or other client software. OpenID is not tied to
        the use of cookies or any other specific mechanism of Relying
        Party or OpenID Provider session management.  Extensions to
        User-Agents can simplify the end user interaction, though are
        not required to utilize the protocol.
        -->
      </t>

      <t>
        プロファイル情報の交換や、本仕様に記されていないその他の情報の交換については、本プロトコル上にサービスタイプを追加し、仕組みを構築することで実現可能である。OpenID 認証は、ポータブル (環境に依存せずに使用可能) でユーザセントリックなデジタルアイデンティティを、自由かつ分散的な方式で実現するための基盤サービスを提供するために設計された。
        <!--
        The exchange of profile information, or the exchange of other
        information not covered in this specification, can be addressed
        through additional service types built on top of this
        protocol to create a framework. OpenID Authentication is
        designed to provide a base service to enable portable,
        user-centric digital identity in a free and decentralized manner.
        -->
      </t>
    </abstract>
  </front>

  <middle>
    <section title="要求記法および規則">
    <!-- section title="Requirements Notation and Conventions" -->
    
      <t>
      本文書で用いられる各キーワード「MUST (しなければならない)」、「MUST NOT (してはならない)」、「REQUIRED (必須である)」、「SHALL (するものとする)」、「SHALL NOT (しないものとする)」、「SHOULD (すべきである)」、「SHOULD NOT (すべきではない)」、「RECOMMENDED (推奨される)」、「MAY (してもよい)」、「OPTIONAL (任意である)」は <xref target="RFC2119"/> で述べられている通りに解釈されるべきものである。
      <!--
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
        and "OPTIONAL" in this document are to be interpreted as
        described in <xref target="RFC2119"/>.
    -->
      </t>

      <t>
      本文書では、書いてあるままに解釈されるべき値は引用符 ("") で囲んで示している。プロトコルメッセージの中でこれらの値を使用する場合は、値の一部として引用符を用いてはならない (MUST NOT)。
      <!--
        Throughout this document, values are quoted to indicate that
        they are to be taken literally. When using these values in
        protocol messages, the quotes MUST NOT be used as part of the
        value.
        -->
      </t>
    </section>

    <section title="用語" anchor="terminology">
    <!--
    <section title="Terminology" anchor="terminology">
    -->
      <t>
        <list style="hanging">
          <!-- t hangText="Identifier:" -->
          <t hangText="識別子 (Identifier):">
            識別子は、"http" または "https" URI (本文書では、通例に従い "URL" と表記)、もしくは <xref target="XRI_Syntax_2.0" >XRI</xref> のいずれかである。本文書では、様々な種類の識別子を定義するが、それぞれ異なるコンテキストでの使用を目的としている。
            <!--
            An Identifier is either a "http" or "https" URI, (commonly
            referred to as a "URL" within this document), or an <xref
            target="XRI_Syntax_2.0" >XRI</xref>.  This document defines
            various kinds of Identifiers, designed for use in different
            contexts.
            -->
          </t>

          <!-- t hangText="User-Agent:" -->
          <t hangText="ユーザエージェント (User-Agent):">
            HTTP/1.1 <xref target="RFC2616"/> を実装したエンドユーザのウェブブラウザ。
            <!--
            The end user's Web browser which implements HTTP/1.1 <xref
            target="RFC2616"/>.
            -->
          </t>

          <!-- t hangText="Relying Party:" -->
          <t hangText="リライングパーティー (Relying Party):">
            略語は RP。エンドユーザが識別子を管理しているという証明を要求するウェブアプリケーション。
          <!--
            RP. A Web application that wants proof that the end user
            controls an Identifier.
            -->
          </t>

          <!-- t hangText="OpenID Provider:" -->
          <t hangText="OpenID プロバイダ (OpenID Provider):">
            略語は OP。エンドユーザが識別子を管理しているというアサーション (assertion) を得るために RP が依存する OpenID 認証サーバ。
            <!--
            OP. An OpenID Authentication server on which a Relying
            Party relies for an assertion that the end user controls
            an Identifier.
            -->
          </t>

          <!-- t hangText="OP Endpoint URL:" -->
          <t hangText="OP エンドポイントURL (OP Endpoint URL):">
            OpenID 認証プロトコルメッセージを受け入れる URL で、ユーザ入力識別子 (User-Supplied Identifier) のディスカバリ (discovery) を実行することにより得られる。この値は、HTTP または HTTPS の絶対 URL でなければならない (MUST)。
            <!--
            The URL which accepts OpenID Authentication protocol messages,
            obtained by performing discovery on the User-Supplied
            Identifier. This value MUST be an absolute HTTP or HTTPS URL.
            -->
          </t>

          <!-- t hangText="OP Identifier:" -->
          <t hangText="OP 識別子 (OP Identifier):">
            OP の識別子。
            <!--
            An Identifier for an OpenID Provider.
            -->
          </t>

          <!-- t hangText="User-Supplied Identifier:" -->
          <t hangText="ユーザ入力識別子 (User-Supplied Identifier):">
            エンドユーザが RP に提示する識別子、または OP においてユーザが選択した識別子。プロトコルの開始 (initiation) フェーズでは、エンドユーザは、自らの識別子、OP 識別子のどちらを入力してもよい。OP 識別子を用いる場合、OP は、エンドユーザが RP に提示する識別子の選択を支援してもよい。
            <!--
            An Identifier that was presented by the end user to the
            Relying Party, or selected by the user at the OpenID
            Provider.  During the initiation phase of the protocol,
            an end user may enter either their own Identifier or an OP
            Identifier. If an OP Identifier is used, the OP may then
            assist the end user in selecting an Identifier to share with
            the Relying Party.
            -->
          </t>

          <!-- t hangText="Claimed Identifier:" -->
          <t hangText="主張識別子 (Claimed Identifier):">
            エンドユーザが自らのものであると主張する識別子。プロトコル全体の狙いは、この主張を検証することにある。主張識別子は、以下のいずれかである。
            <!--
            An Identifier that the end user claims to own; the overall
            aim of the protocol is verifying this claim. The Claimed
            Identifier is either:
            -->
            <list style="symbols">
              <t>
                URL の場合、ユーザ入力識別子を<xref target="normalization">正規化</xref>することで得られる識別子。
                <!--
                The Identifier obtained by <xref target="normalization">
                normalizing</xref> the User-Supplied Identifier, if it
                was an URL.
                -->
              </t>
              <t>
                XRI の場合、<xref target="canonicalid">正準化 ID (CanonicalID)</xref>。
                <!--
                The <xref target="canonicalid">CanonicalID</xref>, if it
                was an XRI.
                -->
              </t>
            </list>
          </t>

          <!-- t hangText="OP-Local Identifier:" -->
          <t hangText="OP ローカル識別子 (OP-Local Identifier):">
            特定の OP でエンドユーザを識別するためにローカルに用いられる代替の識別子。必ずしもエンドユーザが管理しているものではない。
            <!--
            An alternate Identifier for an end user that is local to a
            particular OP and thus not necessarily under the end user's
            control.
            -->
          </t>
        </list>
      </t>
    </section>

    <!-- section title="Protocol Overview" -->
    <section title="プロトコルの概要">

      <t>
        <list style="numbers">
          <t>
            エンドユーザは、ユーザエージェントを通じて RP にユーザ入力識別子を提示することによって、<xref target="initiation">認証を開始</xref>する。
          <!--
            The end user <xref target="initiation">initiates
            authentication</xref> by presenting a User-Supplied Identifier
            to the Relying Party via their User-Agent.
            -->
          </t>
          <t>
            ユーザ入力識別子を<xref target="normalization">正規化</xref>した後、RP はその<xref target="discovery">ディスカバリを実行</xref>し、エンドユーザが認証に用いる OP エンドポイント URL を確定する。ユーザ入力識別子は、OP 識別子である可能性があることに留意する必要があるが、この点については <xref target="discovered_info" /> で述べる。OP 識別子のときは、OP で主張識別子を選択することができる。また、<xref target="extensions">拡張仕様</xref>を利用して実用的な代替手段が取られている場合は、主張識別子を用いずにプロトコルを続行することもできる。
          <!--
            After <xref target="normalization">normalizing</xref> the
            User-Supplied Identifier, the Relying Party <xref
            target="discovery">performs discovery</xref> on it and
            establishes the OP Endpoint URL that the end user uses for
            authentication.  It should be noted that the User-Supplied
            Identifier may be an OP Identifier, as discussed in <xref
            target="discovered_info" />, which allows selection of a
            Claimed Identifier at the OP or for the protocol to
            proceed without a Claimed Identifier if something else
            useful is being done via an <xref
            target="extensions">extension</xref>.
            -->
          </t>
          <t>
            (オプション) 
            RP と OP の間の<xref target="associations">アソシエーション (association)</xref> の確立は、<xref target="RFC2631">Diffie-Hellman 鍵交換</xref>を用いた共有秘密鍵の発行をもって行う。OP はその後のメッセージに署名するためにアソシエーションを用い、RP はこれらのメッセージを検証するためにアソシエーションを用いる。その結果、それぞれの認証要求／応答に続く署名検証のための直接要求を行なう必要がなくなる。
            <!--
            (optional)

            The Relying Party and the OP establish an <xref
            target="associations">association</xref> -- a shared
            secret established using <xref
            target="RFC2631">Diffie-Hellman Key Exchange</xref>. The
            OP uses an association to sign subsequent messages and the
            Relying Party to verify those messages; this removes the
            need for subsequent direct requests to verify the
            signature after each authentication request/response.
            -->
          </t>
          <t>
            RP は、エンドユーザのユーザエージェントを、OpenID <xref target="requesting_authentication">認証要求</xref>とともに OP にリダイレクトする。
            <!--
            The Relying Party redirects the end user's User-Agent to
            the OP with an OpenID <xref
            target="requesting_authentication">Authentication
            request</xref>.
            -->
          </t>
          <t>
            OP は、エンドユーザが OpenID 認証の実行を許可されているかどうか、さらにエンドユーザが認証の実行を求めているかどうかを確定する。OP におけるエンドユーザの認証方法およびそのような認証に関わるポリシーは全て、本文書の対象範囲外である。
            <!--
            The OP establishes whether the end user is authorized to
            perform OpenID Authentication and wishes to do so. The
            manner in which the end user authenticates to their OP and
            any policies surrounding such authentication is out of
            scope for this document.
            -->
          </t>
          <t>
            OP は、エンドユーザのユーザエージェントを、<xref target="positive_assertions">認証が承認された</xref>ことを示すアサーション、<xref target="negative_assertions">認証が失敗した</xref>ことを示すメッセージのどちらかとともに RP へリダイレクトする。
            <!--
            The OP redirects the end user's User-Agent back to the
            Relying Party with either an assertion that <xref
            target="positive_assertions">authentication is
            approved</xref> or a message that <xref
            target="negative_assertions">authentication failed</xref>.
            -->
          </t>
          <t>
            RP は、OP から受け取った情報を<xref target="verification">検証</xref>し、戻り URL (Return URL) のチェック、ディスカバリによって得られた情報の検証、ノンス (nonce) のチェックなどを行なう。また、アソシエーション確立時に発行した共有鍵、あるいは OP への直接要求のいずれかを用いて、署名を検証する。
            <!--
            The Relying Party <xref target="verification">verifies
            </xref> the information received from the OP including
            checking the Return URL, verifying the discovered
            information, checking the nonce, and verifying the
            signature by using either the shared key established
            during the association or by sending a direct request
            to the OP.
            -->
           </t>
         </list>
      </t>
    </section>


    <!-- section title="Data Formats" -->
    <section title="データフォーマット">

      <!-- section title="Protocol Messages" -->
      <section title="プロトコルメッセージ">

        <t>
        OpenID 認証プロトコルメッセージは、プレーンテキストのキーとプレーンテキストの値とをマッピングしたものである。キーおよび値には、Unicode 文字セット (UCS) を全て使用することができる。キーおよび値とバイト形式との間の変換が必要な場合は、<xref target="RFC3629">UTF-8</xref> を用いてエンコードしなければならない (MUST)。
        <!--
          The OpenID Authentication protocol messages are
          mappings of plain-text keys to plain-text values. The keys and
          values permit the full Unicode character set (UCS). When the
          keys and values need to be converted to/from bytes, they
          MUST be encoded using <xref target="RFC3629">UTF-8</xref>.
          -->
        </t>

        <t>
          メッセージは、同じ名前のパラメータを複数含んではならない (MUST NOT)。
          <!--
          Messages MUST NOT contain multiple parameters with the same name.
          -->
        </t>

        <t>
          本文書に記されている OpenID メッセージのパラメータは、全て必須である (REQUIRED)。ただし、任意である (OPTIONAL) と明示されている場合は、その限りではない。
          <!--
          Throughout this document, all OpenID message parameters are
          REQUIRED, unless specifically marked as OPTIONAL.
          -->
        </t>

        <!-- section title="Key-Value Form Encoding" anchor="kvform" -->
        <section title="キー・バリュー形式エンコーディング" anchor="kvform">
          <t>
            キー・バリュー形式のメッセージは、一連の行からなる。各行の最初はキーで、その後ろにコロンを付加し、キーと関連する値が続く。各行は、一個の改行文字 (UCS 文字コード番号 10, "\n") で終わる。キーまたは値は、改行文字を含んではならない (MUST NOT)。また、キーは、コロンを含んではならない (MUST NOT)。
            <!--
            A message in Key-Value form is a sequence of lines.  Each
            line begins with a key, followed by a colon, and the value
            associated with the key.  The line is terminated by a
            single newline (UCS codepoint 10, "\n"). A key or value
            MUST NOT contain a newline and a key also MUST NOT contain
            a colon.
            -->
          </t>
          <t>
            空白を含む追加文字は、コロンまたは改行文字の前後に追加してはならない (MUST NOT)。メッセージからバイト文字列を生成するときは、UTF-8 でエンコードしなければならない (MUST)。
            <!--
            Additional characters, including whitespace, MUST NOT be
            added before or after the colon or newline. The message
            MUST be encoded in UTF-8 to produce a byte string.
            -->
          </t>
          <t>
          キー・バリュー形式エンコーディングは、署名計算および RP への<xref target="direct_response">直接応答</xref>に利用される。
          <!--
            Key-Value Form encoding is used for signature calculation
            and for <xref target="direct_response">direct
            responses</xref> to Relying Parties.
            -->
          </t>
        </section>

        <!-- section title="HTTP Encoding" anchor="http_encoding" -->
        <section title="HTTP エンコーディング" anchor="http_encoding">
          <t>
          HTTP サーバにメッセージを送るときは、<xref target="HTML401" /> の Section 17.13.4 に定められるフォームエンコーディングを用いてエンコードしなければならない (MUST)。同様に、要求のヘッダに "Content-Type" ヘッダが含まれている場合は、その値も <xref target="HTML401" /> の Section 17.13.4 に定められたエンコーディングでなければならない (MUST)。
          <!--
            When a message is sent to an HTTP server, it MUST be encoded
            using a form encoding specified in Section 17.13.4 of
            <xref target="HTML401" />. Likewise, if the "Content-Type"
            header is included in the request headers, its value MUST
            also be such an encoding.
            -->
          </t>
          <t>
            要求メッセージの全てのキーは、その前に "openid." プレフィックスを付加しなければならない (MUST)。このプレフィックスを付加することにより、OpenID 認証メッセージとともに受け渡される他のパラメータとの干渉を回避できる。メッセージを POST で送るとき、OpenID パラメータは常に POST ボディに格納して送り、POST ボディから抽出しなければならない (MUST)。
            <!--
            All of the keys in the request message MUST be prefixed
            with "openid.". This prefix prevents interference with
            other parameters that are passed along with the OpenID
            Authentication message. When a message is sent as a POST,
            OpenID parameters MUST only be sent in, and extracted
            from, the POST body.
            -->
          </t>
          <t>
            HTTP 要求 (GET または POST) として送られるメッセージは全て、以下のフィールドを含んでいなければならない (MUST)。
            <!--
            All messages that are sent as HTTP requests (GET or POST)
            MUST contain the following fields:
            -->
            <list style='symbols'>
              <t>
                openid.ns
                <list style='empty'>
                  <t>
                    <!-- Value -->値: "http://specs.openid.net/auth/2.0"
                  </t>
                  <t>
                    要求が OpenID Authentication 2.0 として有効な要求であるためには、上記の値が存在していなければならない (MUST)。仕様の将来版においては、メッセージ受信者が要求を適切に解釈できるように、異なる値が定義される場合もある。
                    <!--
                    This particular value MUST be present for the
                    request to be a valid OpenID Authentication 2.0
                    request. Future versions of the specification may
                    define different values in order to allow message
                    recipients to properly interpret the request.
                    -->
                  </t>
                  <t>
                    この値が存在しない、あるいは "http://openid.net/signon/1.1" 、"http://openid.net/signon/1.0" のどちらかの値が設定されている場合、そのメッセージの解釈には、<xref target="compat_mode">OpenID Authentication 1.1 互換モード</xref>を用いるべきである (SHOULD)。
                   <!--
                    If this value is absent or set to one of
                    "http://openid.net/signon/1.1" or
                    "http://openid.net/signon/1.0", then this message
                    SHOULD be interpreted using <xref
                    target="compat_mode">OpenID Authentication 1.1
                    Compatibility mode</xref>.
                    -->
                  </t>
                </list>
              </t>
              <t>
                openid.mode
                <list style='empty'>
                  <t>
                    値: メッセージタイプごとに個別に指定。
                    <!-- Value: Specified individually for each message type. -->
                  </t>
                  <t>
                    "openid.mode" パラメータを用いることによって、メッセージ受信者は、処理中のメッセージの種類を知ることができる。"openid.mode" がない場合、メッセージ処理側は、その要求が OpenID メッセージではないと見なすべきである (SHOULD)。
                  <!--                  
                    The "openid.mode" parameter allows the recipient
                    of the message to know what kind of message it is
                    processing. If "openid.mode" is absent, the party
                    processing the message SHOULD assume that the
                    request is not an OpenID message.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>

          <t>
            このモデルは、ユーザエージェントから RP に送られるメッセージ、ユーザエージェントから OP に送られるメッセージ、そして RP から OP に送られるメッセージにも適用される。
           <!--
            This model applies to messages from the User-Agent to both
            the Relying Party and the OP, as well as messages from the
            Relying Party to the OP.
            -->
          </t>
        </section>
        <!-- section title="Example" -->
        <section title="用例">
          <t>
            <!-- Non-normative -->
            参考
          </t>
          <figure>
            <preamble>
            下記は、次の情報のエンコード例である。
            <!--
              The following examples encode the following information:
              -->
            </preamble>
            <!-- artwork><![CDATA[
Key     | Value
--------+---------------------------
mode    | error
error   | This is an example message
]]>
            </artwork -->
            <artwork><![CDATA[
キー    | 値
--------+---------------------------
mode    | error
error   | This is an example message
]]>
            </artwork>
          </figure>

          <figure>
            <preamble>
            エンコードされたキー・バリュー形式：
            <!--
              Key-Value Form encoded:
              -->
            </preamble>
            <artwork><![CDATA[mode:error
error:This is an example message
]]>
            </artwork>
          </figure>

          <figure>
            <preamble>
                HTTP POST ボディまたは URL のクエリ文字列に含まれるときなど x-www-urlencoded の場合 (<xref target="RFC3986" /> Section 3) ：
            <!--
              x-www-urlencoded, as in a HTTP POST body or in a URL's
              query string (<xref target="RFC3986" /> section 3):
              -->
            </preamble>
            <artwork>openid.mode=error&amp;openid.error=This%20is%20an%20example%20message</artwork>
          </figure>
        </section>
      </section>

      <!-- section title="Integer Representations" anchor="btwoc" -->
      <section title="整数表現" anchor="btwoc">
        <t>
          任意精度整数は、ビッグエンディアン符号付き 2 の補数表現バイナリ文字列にエンコードしなければならない (MUST)。以後 "btwoc" は、任意精度整数を引数とし、最も短いビッグエンディアン 2 の補数表現を返す関数とする。Diffie-Hellman 鍵交換で用いる整数は全て、正の数とする。つまり、2 の補数表現の最上位ビットはゼロでなければならない (MUST)。そうでない場合、文字列の先頭にゼロバイトを付加する実装をしなければならない (MUST)。
          <!--
          Arbitrary precision integers MUST be encoded as big-endian
          signed two's complement binary strings. Henceforth, "btwoc"
          is a function that takes an arbitrary precision integer and
          returns its shortest big-endian two's complement
          representation. All integers that are used with
          Diffie-Hellman Key Exchange are positive. This means that
          the left-most bit of the two's complement representation
          MUST be zero. If it is not, implementations MUST add a zero
          byte at the front of the string.
          -->
        </t>
        <figure>
          <preamble><!-- Non-normative example --> 参考例:</preamble>
<!--
Base 10 number | btwoc string representation
-->
          <artwork><![CDATA[
10 進数表現      | btwoc文字列表現
---------------+----------------------------
0              | "\x00"
127            | "\x7F"
128            | "\x00\x80"
255            | "\x00\xFF"
32768          | "\x00\x80\x00"
]]>
          </artwork>
        </figure>
      </section>
    </section>

    <!-- section title="Communication Types" -->
    <section title="通信形式">
      <!-- section title="Direct Communication"
               anchor="direct_comm" -->
      <section title="直接通信 (Direct Communication)"
               anchor="direct_comm">
        <t>
          直接通信は、OP エンドポイント URL に対し、RP 側から開始され、<xref target="associations">アソシエーションの確立</xref>および<xref target="check_auth">認証アサーションの検証</xref>のために用いられる。
          <!--
          Direct communication is initiated by a Relying Party to an
          OP endpoint URL.  It is used for <xref
          target="associations">establishing associations</xref> and
          <xref target="check_auth">verifying authentication
          assertions</xref>.
          -->
        </t>
        <!-- section title="Direct Request" anchor="direct_request" -->
        <section title="直接要求 (Direct Request)" anchor="direct_request">
          <t>
            メッセージは、<xref target="http_encoding" /> で指定した通り、POST ボディとしてエンコードしなければならない (MUST)。
            <!--
            The message MUST be encoded as a POST body, as specified
            by <xref target="http_encoding" />.
            -->
          </t>
          <t>
            直接要求は全て HTTP POST であり、そのため、<xref target="http_encoding" /> で示した必須フィールドを含む。
            <!--
            All direct requests are HTTP POSTs, and so
            contain the required fields listed in <xref
                target="http_encoding" />.
          -->
          </t>
        </section>
        <!-- section title="Direct Response" anchor="direct_response" -->
        <section title="直接応答 (Direct Response)" anchor="direct_response">
          <t>
            <xref target="direct_request">直接要求</xref>への応答のボディは、<xref target="kvform">キー・バリュー形式</xref>の中の HTTP 応答ボディで構成される。応答の content-type は、"text/plain" とすべきである (SHOULD)。
            <!--
            The body of a response to a <xref
            target="direct_request">Direct Request</xref> consists of
            an HTTP Response body in <xref target="kvform">Key-Value
            Form</xref>. The content-type of the response SHOULD be
            "text/plain".
            -->
          </t>
          <t>
            キー・バリュー形式のメッセージは全て、以下のフィールドを含まなければならない (MUST)。
            <!--
            All Key-Value form message MUST contain the following field:
            -->
            <list style='symbols'>
              <t>
                ns
                <list style='empty'>
                  <t>
                    <!-- Value -->値: "http://specs.openid.net/auth/2.0"
                  </t>
                  <t>
                    応答が OpenID 2.0 として有効な応答であるためには、上記の値が存在していなければならない (MUST)。仕様の将来版においては、メッセージ受信者が応答を適切に解釈できるように、異なる値が定義される場合もある。
                    <!--
                    This particular value MUST be present for the
                    response to be a valid OpenID 2.0 response. Future
                    versions of the specification may define different
                    values in order to allow message recipients to
                    properly interpret the request.
                    -->
                  </t>
                  <t>
                    この値が存在しない、あるいは "http://openid.net/signon/1.1"、"http://openid.net/signon/1.0" のどちらかの値が設定されている場合、そのメッセージの解釈には、<xref target="compat_mode">OpenID Authentication 1.1 互換モード</xref>を用いるべきである (SHOULD)。
                    <!--
                    If this value is absent or set to one of
                    "http://openid.net/signon/1.1" or
                    "http://openid.net/signon/1.0", then this message
                    SHOULD be interpreted using <xref
                    target="compat_mode">OpenID Authentication 1.1
                    Compatibility mode</xref>.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>

          <!-- section title="Successful Responses" -->
          <section title="成功時の応答 (Successful Responses)">
            <t>
              サーバが有効な要求を受け取ったときは、HTTP ステータスコード 200 の応答を送らなければならない (MUST)。
              <!--
              A server receiving a valid request MUST send a
              response with an HTTP status code of 200.
                -->
            </t>
          </section>

          <!-- section title="Error Responses" -->
          <section title="エラー時の応答 (Error Responses)">
            <t>
              不正な要求があった場合や無効な引数が含まれていた場合、サーバは、HTTP ステータスコード 400 を含む応答を送らなければならない (MUST)。応答のボディは、以下のフィールドを含む<xref target="kvform">キー・バリュー形式</xref>メッセージでなければならない (MUST):
              <!--
              If a request is malformed or contains invalid arguments,
              the server MUST send a response with a status code of
              400. The response body MUST be a <xref
              target="kvform">Key-Value Form</xref> message with the
              following fields:
              -->
            </t>
            <t>
              <list style='symbols'>
                <t>
                  ns
                  <list style='empty'>
                    <t>
                      <xref target="direct_response" /> で指定した通り。
                      <!--
                      As specified in <xref target="direct_response" />.
                      -->
                    </t>
                  </list>
                </t>

                <t>
                  error
                  <list style='empty'>
                    <t>
                      <!--
                      Value: A human-readable message indicating the cause
                      of the error.
                      -->
                      値: 人間が解読可能なメッセージ。エラーの原因を示す。
                    </t>
                  </list>
                </t>

                <t>
                  contact
                  <list style='empty'>
                    <t>
                      値: (オプション) サーバ管理者の連絡先。連絡先は、人間に対して表示するためのものなので、どのような形で記述してもよい。
                      <!--
                      Value: (optional) Contact address for the
                      administrator of the server. The contact address
                      may take any form, as it is intended to be
                      displayed to a person.
                      -->
                    </t>
                  </list>
                </t>

                <t>
                  reference
                  <list style='empty'>
                    <t>
                      値: (オプション) サポートチケット番号やニュースブログへの URL などの参照トークン。
                      <!--
                      Value: (optional) A reference token, such
                      as a support ticket number or a URL to a news
                      blog, etc.
                      -->
                    </t>
                  </list>
                </t>
              </list>
              OP は、この応答に追加フィールドを追加してもよい (MAY)。
              <!--
               The OP MAY add additional fields to this response.
               -->
            </t>
          </section>
        </section>
      </section>
      <!-- section title="Indirect Communication"
               anchor="indirect_comm" -->
      <section title="間接通信 (Indirect Communication)"
               anchor="indirect_comm">
        <t>
          間接通信では、ユーザエージェントを経由してメッセージの受け渡しを行う。間接通信は、RP、OP のいずれからでも開始することができる。間接通信は、<xref target="requesting_authentication">認証要求</xref>および<xref target="responding_to_authentication">認証応答</xref>のために用いられる。
          <!--
          In indirect communication, messages are passed through the
          User-Agent.  This can be initiated by either the Relying
          Party or the OP.  Indirect communication is used for <xref
          target="requesting_authentication">authentication
          requests</xref> and <xref
          target="responding_to_authentication">authentication
          responses</xref>.
          -->
        </t>
        <t>
          間接通信には、HTTP リダイレクトと HTML フォーム送信の二つの方法がある。フォーム送信もリダイレクトも、送信側が受信側の URL を知っていること、そして受信側の URL が <xref target="http_encoding"/> で指定されているような、間接メッセージの受信を想定していることが求められる。通信を開始する側が、機能、メッセージサイズ、その他の外部要因に応じて適切な間接通信の方法を選択する。
          <!--
          There are two methods for indirect communication: HTTP
          redirects and HTML form submission.
          Both form submission and redirection require that the sender
          know a recipient URL and that the recipient URL expect
          indirect messages, as specified in <xref target="http_encoding"
          />. The initiator of the communication chooses which method
          of indirect communication is appropriate depending on
          capabilities, message size, or other external factors.
          -->
        </t>
        <t>
          全ての間接メッセージは HTTP 要求として受信され、そのため、<xref target="http_encoding"/> で示した必須フィールドを含む。
          <!--
          All indirect messages arrive as HTTP requests, and so
          contain the required fields listed in <xref
          target="http_encoding" />.
          -->
        </t>

        <!-- section title="HTTP Redirect" -->
        <section title="HTTP リダイレクト">
          <t>
            データは、302、303 または 307 HTTP リダイレクトを発行することによって、エンドユーザのユーザエージェントに転送できる。リダイレクト URL は受信側の URL で、<xref target="http_encoding" /> で指定されている通り、クエリ文字列に OpenID 認証メッセージが付加されている。
            <!--
            Data can be transferred by issuing a 302, 303, or 307 HTTP
            Redirect to the end user's User-Agent. The redirect URL is
            the URL of the receiver with the OpenID Authentication
            message appended to the query string, as specified in
            <xref target="http_encoding" />.
            -->
          </t>
        </section>

        <!-- section title="HTML FORM Redirection" -->
        <section title="HTML フォームリダイレクト">
          <t>
            キーと値とのマッピングを転送するには、HTML フォームエレメントを含む HTML ページをユーザエージェントに戻す。フォーム送信は、JavaScript を用いるなどして自動化してもよい (MAY)。
            <!--
            A mapping of keys to values can be transferred by
            returning an HTML page to the User-Agent that contains an
            HTML form element. Form submission MAY be automated,
            for example by using JavaScript.
            -->
          </t>
          <t>
            &lt;form&gt; エレメントの "action" 属性値は、受信側の URL でなければならない (MUST)。それぞれのキー・バリューのペアは、&lt;input&gt; エレメントとしてフォームに含まれていなければならない (MUST)。フォーム送信を行なうとき、<xref target="http_encoding"/> で指定されている通りにユーザエージェントがメッセージを生成するように、キーは "name" 属性として、値は "value" 属性としてエンコードしなければならない (MUST)。フォームは送信ボタンを含まなければならない (MUST)。
            <!--
            The &lt;form&gt; element's "action" attribute value MUST
            be the URL of the receiver. Each Key-Value pair MUST be
            included in the form as an &lt;input&gt; element. The key
            MUST be encoded as the "name" attribute and the value as
            the "value" attribute, such that the User-Agent will
            generate a message as specified in <xref
            target="http_encoding"/> when the form is submitted. The
            form MUST include a submit button.
            -->
          </t>
        </section>
        <!-- section title="Indirect Error Responses" anchor="indirect_error" -->
        <section title="エラー時の間接応答" anchor="indirect_error">
          <t>
            不正な要求があった場合や無効な引数が含まれていた場合、OP は、ユーザエージェントを "openid.return_to" URL 値にリダイレクトしなければならない (MUST)。ただし、値が存在し、その値が有効な URL である場合に限る。
            <!--
            In the case of a malformed request, or one that contains
            invalid arguments, the OpenID Provider MUST redirect the
            User-Agent to the "openid.return_to" URL value if the
            value is present and it is a valid URL.
            -->
          </t>
          <t>
            <list style='symbols'>
              <t>
                openid.ns
                <list style='empty'>
                  <t>
                    <!-- As specified in <xref target="http_encoding" />. -->
                    <xref target="http_encoding" /> で指定した通り。
                  </t>
                </list>
              </t>

              <t>
                openid.mode
                <list style='empty'>
                  <t>
                    <!-- Value -->値: "error"
                  </t>
                </list>
              </t>
              <t>
                openid.error
                <list style='empty'>
                  <t>
                    値: 人間が解読可能なメッセージ。エラーの原因を示す。
                    <!--
                    Value: A human-readable message indicating the cause
                    of the error.
                    -->
                  </t>
                </list>
              </t>
              <t>
                openid.contact
                <list style='empty'>
                  <t>
                    値: (オプション) サーバ管理者の連絡先。連絡先は、人間に対して表示するためのものなので、どのような形で記述してもよい。
                    <!--
                    Value: (optional) Contact address for the
                    administrator of the sever. The contact address
                    may take any form, as it is intended to be
                    displayed to a person.
                    -->
                  </t>
                </list>
              </t>

              <t>
                openid.reference
                <list style='empty'>
                  <t>
                    値: (オプション) サポートチケット番号やニュースブログへの URL などの参照トークン。
                    <!--
                    Value: (optional) A reference token, such as a
                    support ticket number or a URL to a news blog,
                    etc.
                    -->
                  </t>
                </list>
              </t>
            </list>

            サーバは、この応答に追加の鍵を追加してもよい (MAY)。
            <!-- The server MAY add additional keys to this response. -->
          </t>
          <t>
            RP が不正なメッセージや無効なメッセージを受け取った場合、もしくは、"openid.return_to" が存在しなかったり、その値が有効な URL ではなかったりした場合、サーバはエンドユーザに応答を戻し、エラーが生じ、処理が継続できないことを示すべきである (SHOULD)。
            <!--
            If the malformed or invalid message is received by the Relying
            Party, or "openid.return_to" is not present or its value is not
            a valid URL, the server SHOULD return a response to the
            end user indicating the error and that it is unable to continue.
            -->
          </t>
        </section>
      </section>
    </section>

    <section title="署名の生成" anchor="generating_signatures">
    <!-- section title="Generating Signatures" anchor="generating_signatures" -->
      <t>
        アソシエーションは、OpenID 認証メッセージに署名するために使用するメッセージ認証コード (MAC) 鍵として用いるのが最も一般的である。
        <!--
        The most common usage of an association is as a Message
        Authentication Code (MAC) key used to sign OpenID
        Authentication messages.
        -->
      </t>
      <t>
        MAC 鍵を生成するときは、<xref target="RFC1750" /> に記されている勧告に従うべきである (SHOULD)。
        <!--
        When generating MAC keys, the recommendations in <xref
        target="RFC1750" /> SHOULD be followed.
        -->
      </t>


      <section title="署名の生成手順">
      <!-- section title="Procedure" -->
        <t>
          署名の生成手順は、以下の通りである。
          <!-- To generate a message signature: -->

          <list style="numbers">
            <t>
              署名すべきメッセージに応じて、署名すべきキーのリストを決定する (<xref target="positive_assertions" /> 参照)。署名すべきキーのリストは、メッセージの一部でなければならない (MUST)。リストは "openid.signed" キーとともに格納される。値は、"openid." プレフィックスを削除したコンマ区切りのキーのリストである。このアルゴリズムは、"openid." で始まるキーの署名にのみ用いることができる。
              <!--
              Determine the list of keys to be signed, according to
              the message to be signed (See <xref
              target="positive_assertions" />). The list of keys to be
              signed MUST be part of the message. The list is stored
              with the key "openid.signed". The value is a
              comma-separated list of keys, with the "openid." prefix
              stripped. This algorithm is only capable of signing keys
              that start with "openid."
              -->
            </t>

            <t>
              "openid.signed" に示された順序で、署名すべきキーのリストそれぞれについて、メッセージ中から "openid." で始まり同じキーを持つ値を探す。
              <!--
              Iterate through the list of keys to be signed in the
              order they appear in "openid.signed" list.  For each
              key, find the value in the message whose key is equal to
              the signed list key prefixed with "openid."
              -->
            </t>

            <t>
              署名すべキーと値のペアのリストを、<xref target="kvform">キー・バリュー形式エンコーディング</xref>でエンコードしてオクテット文字列に変換する。
              <!--
              Convert the list of key/value pairs to be signed to an
              octet string by encoding with <xref
              target="kvform">Key-Value Form Encoding</xref>.
              -->
            </t>

            <t>
              <xref target="associations">アソシエーション形式</xref>から<xref target="sign_algos">署名アルゴリズム</xref>を決定する。その署名アルゴリズムをオクテット文字列に適用する。
              <!--
              Determine the signature algorithm from the <xref
              target="associations">association type</xref>.  Apply
              the <xref target="sign_algos">signature algorithm</xref>
              to the octet string.
              -->
            </t>
          </list>
        </t>
      </section>

      <section title="署名アルゴリズム" anchor="sign_algos">
      <!-- section title="Signature Algorithms" anchor="sign_algos" -->
        <t>
          OpenID 認証は、以下のふたつの署名アルゴリズムをサポートしている。
          <!--
          OpenID Authentication supports two signature algorithms:
          -->

          <list style="symbols">
            <t>HMAC-SHA1 - 160 ビット鍵長 (<xref target="RFC2104" /> および <xref target="RFC3174" />)</t>
            <t>HMAC-SHA256 - 256 ビット鍵長 (<xref target="RFC2104" /> および <xref target="FIPS180-2" />)</t>
            <!--
            <t>HMAC-SHA1 - 160 bit key length (<xref target="RFC2104" /> and <xref target="RFC3174" />)</t>
            <t>HMAC-SHA256 - 256 bit key length (<xref target="RFC2104" /> and <xref target="FIPS180-2" /></t>
            -->
          </list>

          サポートされている場合は、HMAC-SHA256 の使用を推奨する (RECOMMENDED)。
          <!--
          If supported, the use of HMAC-SHA256 is RECOMMENDED.
          -->
        </t>
      </section>
    </section>

    <section title="開始とディスカバリ">
    <!-- section title="Initiation and Discovery" -->

      <section title="開始" anchor="initiation">
      <!-- section title="Initiation" anchor="initiation" -->
        <t>
          OpenID 認証を開始するに当り、RP は、ユーザ入力識別子の入力フォームをエンドユーザに提示すべきである (SHOULD)。
          <!--
          To initiate OpenID Authentication, the Relying Party SHOULD
          present the end user with a form that has a field for
          entering a User-Supplied Identifier.
          -->
        </t>

        <t>
          フォームが OpenID フォームであることが自動的に判断できるように、フォームフィールドの "name" 属性値は、"openid_identifier" であるべきである (SHOULD)。この属性に適切な値が設定されていないと、ブラウザの拡張機能など OpenID 認証をサポートするソフトウェアが RP のサポートを検出できないこともある。
          <!--
          The form field's "name" attribute SHOULD have the value
          "openid_identifier", so that User-Agents can automatically
          determine that this is an OpenID form. Browser extensions or
          other software that support OpenID Authentication may not
          detect a Relying Party's support if this attribute is not
          set appropriately.
          -->
        </t>
      </section>

      <section title="正規化" anchor="normalization">
      <!-- section title="Normalization" anchor="normalization" -->
        <t>
          エンドユーザの入力は、識別子へと正規化されなければならない (MUST)。その手順を以下に示す。
          <!--
          The end user's input MUST be normalized into an
          Identifier, as follows:
          -->
        </t>

        <t>
          <list style="numbers">
            <t>
              ユーザの入力がプレフィックス "xri://" で始まる場合は、XRI が正準形式で使用されるように、その部分を削除しなければならない (MUST)。
              <!--
              If the user's input starts with the "xri://" prefix,
              it MUST be stripped off, so that XRIs are used in the
              canonical form.
              -->
            </t>

            <t>
              その結果得られた文字列の最初の文字が、<xref target="XRI_Syntax_2.0" /> Section 2.2.1 で定義されている XRI グローバルコンテキストシンボル (Global Context Symbol) ("=", "@", "+", "$", "!") または "(" である場合、入力は XRI として扱うべきである (SHOULD)。
              <!--
              If the first character of the resulting string is an
              XRI Global Context Symbol ("=", "@", "+", "$", "!") or "(", as
              defined in Section 2.2.1 of <xref target="XRI_Syntax_2.0" />, 
              then the input SHOULD be treated as an XRI.
              -->
            </t>

            <t>
              そうでない場合、入力は、http URL として扱うべきである (SHOULD)。得られた文字列に "http" または "https" スキームが含まれていない場合は、識別子の先頭に "http://" という文字列を付加しなければならない (MUST)。URL にフラグメント部分が含まれている場合、フラグメントの区切り文字 "#" も合わせて、その部分を削除しなければならない (MUST)。詳しくは、<xref target='http_s_identifiers' /> 参照。
              <!--
              Otherwise, the input SHOULD be treated as an http URL; if it
              does not include a "http" or "https" scheme, the Identifier
              MUST be prefixed with the string "http://". If the URL
              contains a fragment part, it MUST be stripped off
              together with the fragment delimiter character "#". See
              <xref target='http_s_identifiers' /> for more information.
              -->
            </t>

            <t>
              その後、コンテンツを取得するときにリダイレクトを辿り、最終的な目的の URL に対して <xref target='RFC3986' /> Section 6 に記されている規則を適用することによって、URL 識別子をさらに正規化しなければならない (MUST)。この最終 URL を、RP は主張識別子として記録し、<xref target="requesting_authentication">認証要求</xref>時に使用しなければならない (MUST)。
              <!--
              URL Identifiers MUST then be further normalized by both
              following redirects when retrieving their content and
              finally applying the rules in Section 6 of <xref
              target='RFC3986' /> to the final destination URL. This
              final URL MUST be noted by the Relying Party as the
              Claimed Identifier and be used when <xref
              target="requesting_authentication">requesting
              authentication</xref>.
              -->
            </t>
          </list>

          <xref target="normalization_example">正規化例</xref>参照。
          <!--
          See <xref target="normalization_example">normalization
          example</xref>.
          -->

        </t>
      </section>

      <section title="ディスカバリ" anchor="discovery">
      <!-- section title="Discovery" anchor="discovery" -->

        <t>
          ディスカバリ (discovery) は、RP が識別子を使用して、要求の開始に必要な情報を調べる (“発見する (discover) ”) プロセスである。OpenID 認証には、ディスカバリを実行する3つの経路がある。
          <!--
          Discovery is the process where the Relying Party uses the
          Identifier to look up ("discover") the necessary information
          for initiating requests. OpenID Authentication has three
          paths through which to do discovery:
          -->
        </t>

        <t>
          <list style="numbers">
            <t>
              識別子が XRI の場合、<xref
              target="XRI_Resolution_2.0" /> によって、必要な情報が記された XRDS 文書が生成される。また、RP は、XDI.org が http://www.xri.net で提供されているような XRI プロキシリゾルバを活用できるという点にも留意すべきである。XRI プロキシリゾルバを活用することによって、RP は XRI レゾリューションをローカルに行なう必要がなくなる。
              <!--
              If the identifier is an XRI, <xref
              target="XRI_Resolution_2.0" />
              will yield an XRDS document that
              contains the necessary information.  It should also be
              noted that Relying Parties can take advantage of
              XRI Proxy Resolvers, such as the one provided by
              XDI.org at http://www.xri.net. This will remove the need for the RPs to
              perform XRI Resolution locally.
              -->
            </t>

            <t>
              識別子が URL の場合は、<xref target="Yadis">Yadis プロトコル</xref> を最初に試みるものとする (SHALL)。成功すれば、同様に XRDS 文書が結果として生成される。
              <!--
              If it is a URL, the <xref target="Yadis">Yadis
              protocol</xref> SHALL be first attempted. If it
              succeeds, the result is again an XRDS document.
              -->
            </t>

            <t>
              Yadis プロトコルが失敗し、有効な XRDS 文書が取得できない場合、あるいは、XRDS 文書に<xref target="service_elements">サービスエレメント</xref>が記されていない場合は、URL を取得し、<xref target="html_disco">HTML ベースのディスカバリ</xref>を試みるものとする (SHALL)。
              <!--
              If the Yadis protocol fails and no valid XRDS document
              is retrieved, or no <xref
              target="service_elements">Service Elements</xref> are
              found in the XRDS document, the URL is retrieved and
              <xref target="html_disco">HTML-Based discovery</xref>
              SHALL be attempted.
              -->
            </t>
          </list>
        </t>

        <section title="ディスカバリによって得られる情報" anchor="discovered_info">
        <!-- section title="Discovered Information" anchor="discovered_info" -->
          <t>
            ディスカバリが正常に完了すると、RP は、以下に示す情報を一組以上取得できる (定義については、<xref target="terminology">用語セクション</xref>を参照)。以下に示す情報が二組以上得られた場合は、<xref target="XRI_Resolution_2.0" /> で定義されている優先順位規則を適用する。
            <!--
            Upon successful completion of discovery, the Relying Party
            will have one or more sets of the following information
            (see the <xref target="terminology">Terminology
            section</xref> for definitions).  If more than one set of
            the following information has been discovered, the
            precedence rules defined in <xref target="XRI_Resolution_2.0" />
            are to be applied.
            -->

            <list style="symbols">
              <t>OP エンドポイント URL</t>
              <t>プロトコルバージョン</t>
              <!--
              <t>OP Endpoint URL</t>
              <t>Protocol Version</t>
              -->
            </list>

            エンドユーザが OP 識別子を入力しなかった場合は、以下の情報も得られる。
            <!--
            If the end user did not enter an OP Identifier, the
            following information will also be present:
            -->

            <list style="symbols">
              <t>主張識別子</t>
              <t>OP ローカル識別子</t>
              <!--
              <t>Claimed Identifier</t>
              <t>OP-Local Identifier</t>
              -->
            </list>

            エンドユーザが OP 識別子を入力すると、主張識別子は得られない。OpenID 認証要求を行なう目的で、OP 識別子を入力するときには、主張識別子、OP ローカル識別子 の値はともに、"http://specs.openid.net/auth/2.0/identifier_select" を用いなければならない (MUST)。
            <!--
            If the end user entered an OP Identifier, there is no
            Claimed Identifier. For the purposes of making OpenID
            Authentication requests, the value
            "http://specs.openid.net/auth/2.0/identifier_select"
            MUST be used as both the Claimed Identifier and the
            OP-Local Identifier when an OP Identifier is entered.
            -->
          </t>
        </section>

        <section title="XRDS ベースのディスカバリ">
        <!-- section title="XRDS-Based Discovery" -->
          <t>
            XRI または Yadis ディスカバリを用いた場合、その結果、XRDS 文書が得られる。この XML 文書には、識別子に関連するサービスのエントリが含まれている。その定義は、<xref target="XRI_Resolution_2.0"> Section 3</xref> で行われている。付属資料 A.3 の <xref target="XRDS_Sample" />を参照のこと。
            <!--
            If XRI or Yadis discovery was used, the result will be an
            XRDS Document.  This is an XML document with entries for
            services that are related to the Identifier.  It is
            defined in <xref target="XRI_Resolution_2.0">Section 3
            of</xref>.  See <xref target="XRDS_Sample" /> for an
            example XRDS document.
            -->
          </t>


          <section title="OpenID サービスエレメント" anchor="service_elements">
          <!-- section title="OpenID Service Elements" anchor="service_elements" -->

            <section title="OP 識別子エレメント">
            <!-- section title="OP Identifier Element" -->
              <t>
                OP 識別子エレメントは、以下の情報を有する &lt;xrd:Service&gt; エレメントである。
                <!--
                An OP Identifier Element is an &lt;xrd:Service&gt;
                element with the following information:
                -->

                <list style="hanging">
                  <t>
                    テキスト内容が "http://specs.openid.net/auth/2.0/server" の &lt;xrd:Type&gt; タグ
                    <!--
                    An &lt;xrd:Type&gt; tag whose text content is
                    "http://specs.openid.net/auth/2.0/server".
                    -->
                  </t>

                  <t>
                    テキスト内容が OP エンドポイント URL の &lt;xrd:URI&gt; タグ
                    <!--
                    An &lt;xrd:URI&gt; tag whose text content is the
                    OP Endpoint URL
                    -->
                  </t>
                </list>
              </t>
            </section>

            <section title="主張識別子エレメント">
            <!-- section title="Claimed Identifier Element" -->
              <t>
                主張識別子エレメントは、以下の情報を有する &lt;xrd:Service&gt; エレメントである。
                <!--
                A Claimed Identifier Element is an
                &lt;xrd:Service&gt; element with the following
                information:
                -->

                <list style="hanging">
                  <t>
                    テキスト内容が "http://specs.openid.net/auth/2.0/signon" の &lt;xrd:Type&gt; タグ
                    <!--
                    An &lt;xrd:Type&gt; tag whose text content is
                    "http://specs.openid.net/auth/2.0/signon".
                    -->
                  </t>

                  <t>
                    テキスト内容が OP エンドポイント URL の &lt;xrd:URI&gt; タグ
                    <!--
                    An &lt;xrd:URI&gt; tag whose text content is the
                    OP Endpoint URL.
                    -->
                  </t>

                  <t>
                    テキスト内容が OP ローカル識別子 の &lt;xrd:LocalID&gt; タグ (オプション)
                    <!--
                    An &lt;xrd:LocalID&gt; tag (optional) whose text
                    content is the OP-Local Identifier.
                    -->
                  </t>
                </list>
              </t>
            </section>
          </section>

          <section title="認証データの抽出" anchor="extracting_auth">
          <!-- section title="Extracting Authentication Data" anchor="extracting_auth" -->
            <t>
              RP が XRDS 文書を取得したら、まず (<xref target="XRI_Resolution_2.0" /> に記されている規則に従って)、その文書の中から OP 識別子エレメントを検索しなければならない (MUST)。見つからない場合は、主張識別子エレメントを検索する。
              <!--
              Once the Relying Party has obtained an XRDS document, it
              MUST first search the document (following the rules
              described in <xref target="XRI_Resolution_2.0" />) for
              an OP Identifier Element. If none is found, the RP will search
              for a Claimed Identifier Element.
              -->
            </t>
          </section>

          <section title="XRI および正準化 ID エレメント" anchor="canonicalid" toc="exclude">
          <!-- section title="XRI and the CanonicalID Element" anchor="canonicalid" toc="exclude" -->
            <t>
              識別子が XRI の場合、OpenID 認証エレメント &lt;xrd:Service&gt; を含む &lt;xrd:XRD&gt; エレメントには、&lt;CanonicalID&gt; エレメントも含まれていなければならない (MUST)。また、このエレメントの内容を主張識別子として使用しなければならない (MUST) (<xref target="identifying" /> 参照)。これはセキュリティ上の配慮として不可欠である。その理由は、&lt;CanonicalID&gt; エレメント の主要目的は、再度割り当てられることがない永続的 (persistent) な識別子を検証し、XRI が新たな登録者に ("乗っ取られる") 可能性をなくすことにあるからである。
              <!--
              When the Identifier is an XRI, the &lt;xrd:XRD&gt;
              element that contains the OpenID Authentication
              &lt;xrd:Service&gt; element MUST also contain a
              &lt;CanonicalID&gt; element. The content of this element
              MUST be used as the Claimed Identifier (see <xref
              target="identifying" />).  This is a vital security
              consideration because a primary purpose of the
              &lt;CanonicalID&gt; element is to assert a persistent
              identifier that will never be reassigned, thus
              preventing the possibility of an XRI being ("taken
              over") by a new registrant.
              -->
            </t>

            <t>
              RPは、&lt;CanonicalID&gt; エレメントを含む XRD の提供者がその正準化 ID に対する権限を有していること、また、当該 XRDS 文書がその OpenID サービスエレメントに対する権限を有していることを確認しなければならない (MUST)。RP は、これを手動で行なうか、リゾルバによる実施を確保すべきである。
              <!--
              The Relying Party MUST confirm that the provider of the
              XRD that contains the &lt;CanonicalID&gt; element is
              authoritative for that Canonical ID and that this XRDS
              document is authoritative for the OpenID Service
              Element. Relying Parties should either do this manually
              or ensure that their resolver does this.
              -->
           </t>

            <t>
              XRI レゾリューションを用いる場合、正準化 ID を主張識別子として使用しなければならない (MUST)。XRI が有効な識別子であるためには、&lt;ProviderID&gt; と &lt;CanonicalID&gt; の両方がディスカバリによって得られた XRDS 文書の中に記されていなければならない (MUST)。
              <!--
              When using XRI resolution, the Canonical ID MUST be
              used as the Claimed Identifier. For an XRI to be a
              valid Identifier, both the &lt;ProviderID&gt; and
              &lt;CanonicalID&gt; MUST be present in the discovered
              XRDS document.
              -->
            </t>

            <t>
              URL 識別子を用いる場合、正準化 ID が記されていたとしても、それを無視しなければならない (MUST)。
              <!--
              When using URL Identifiers, the CanonicalID
              element MUST be ignored if present.
              -->
            </t>
          </section>

          <section title="追加情報">
          <!-- section title="Additional Information" -->
            <t>
              OpenID Authentication 2.0 以降、"openid"名前空間は使用されない。"xrd"名前空間は、"xri://$xrd*($v*2.0)" である。
              <!--
              The "openid" namespace is no longer used as of OpenID
              Authentication 2.0.  The "xrd" namespace is
              "xri://$xrd*($v*2.0)".
              -->
            </t>

            <t>
              使用されている既存のコードに対する互換性を確保するため、RP は、<xref target="compat_mode">OpenID Authentication 1.1 互換モード</xref>のセクションで記した通り、&lt;xrd:Type&gt; の値として "http://openid.net/signon/1.0" または "http://openid.net/signon/1.1" を受け入れることが推奨される (RECOMMENDED)。OpenID Authentication 2.0 をサポートする RP は、"http://specs.openid.net/auth/2.0/server" および "http://specs.openid.net/auth/2.0/signon" タイプのエンドポイントが利用可能な場合、<xref target="extracting_auth" /> で指定した順序で、これらのエンドポイントの利用を選択することが推奨される (RECOMMENDED)。
              <!--
              For compatibility with deployed code, it is RECOMMENDED
              that Relying Parties also accept
              "http://openid.net/signon/1.0" or
              "http://openid.net/signon/1.1" for the value of
              &lt;xrd:Type&gt;, as described in the <xref
              target="compat_mode">OpenID Authentication 1.1
              Compatibility mode</xref> section. It is RECOMMENDED
              that Relying Parties supporting OpenID Authentication
              2.0 choose to use, if available, endpoints with the type
              "http://specs.openid.net/auth/2.0/server" and
              "http://specs.openid.net/auth/2.0/signon", in
              this order, as specified in <xref
              target="extracting_auth" />
              -->
            </t>

            <t>
              OP が拡張仕様 (<xref target="extensions" /> 参照) をサポートする場合は、その拡張仕様を &lt;xrd:Service&gt; エレメントの追加の &lt;xrd:Type&gt; 子エレメントとして列記すべきである (SHOULD)。
              <!--
              If an OP supports extensions (<xref target="extensions"
              />), the extensions SHOULD be listed as additional
              &lt;xrd:Type&gt; child elements of the
              &lt;xrd:Service&gt; element.
              -->
            </t>

          </section>

        </section>

        <section anchor="html_disco" title="HTML ベースのディスカバリ">
        <!-- section anchor="html_disco" title="HTML-Based Discovery" -->
          <t>
            RP は、HTML ベースのディスカバリをサポートしなければならない (MUST)。HTML ベースのディスカバリは、主張識別子のディスカバリにのみ用いることができる。OP 識別子は、XRDS ディスカバリをサポートする XRI または URL でなければならない。
            <!--
            HTML-Based discovery MUST be supported by Relying
            Parties. HTML-Based discovery is only usable for discovery
            of Claimed Identifiers. OP Identifiers must be XRIs or
            URLs that support XRDS discovery.
            -->
          </t>

          <t>
            HTML ベースのディスカバリを利用するためには、主張識別子の URL に HTML 文書が用意されていなければならない (MUST)。文書の HEAD エレメントは以下の要素を含む。
            <!--
            To use HTML-Based discovery, an HTML document MUST be
            available at the URL of the Claimed Identifier. Within the
            HEAD element of the document:
            -->

            <list>
              <t>
                "rel" 属性が "openid2.provider" 、"href" 属性が OP エンドポイント URL に設定された LINK エレメントを含まなければならない (MUST)。
                <!--
                A LINK element MUST be included with attributes
                "rel" set to "openid2.provider" and "href" set to an OP
                Endpoint URL
                -->
              </t>
              <t>
                "rel" 属性が "openid2.local_id" 、"href" 属性がエンドユーザの OP ローカル識別子 に設定された LINK エレメントを含んでいてもよい (MAY)。
                <!--
                A LINK element MAY be included with attributes
                "rel" set to "openid2.local_id" and "href" set to the
                end user's OP-Local Identifier
                -->
              </t>
            </list>
          </t>

          <t>
            HTMLディスカバリの際のプロトコルバージョンは "http://specs.openid.net/auth/2.0/signon" である。
            <!--
            The protocol version when HTML discovery is performed is
            "http://specs.openid.net/auth/2.0/signon".
            -->
          </t>

          <t>
            HTML 文書の提供ホストは、エンドユーザの OP のホストと異なっていてもよい (MAY)。
            <!--
            The host of the HTML document MAY be different from the
            end user's OP's host.
            -->
          </t>

          <t>
            "openid2.provider" および "openid2.local_id" URL は、"&amp;amp;" 、"&amp;lt;" 、"&amp;gt;" 、"&amp;quot;" 以外のエンティティを含んでいてはならない (MUST NOT)。HTML 文書において有効でない、あるいは、文書の文字エンコーディングにおいて表現できない、その他の文字の使用は、<xref target='RFC3986' /> に示されるパーセントエンコーディング (%xx) の仕組みを用いて、エスケープしなければならない (MUST)。
            <!--
            The "openid2.provider" and "openid2.local_id" URLs MUST NOT
            include entities other than "&amp;amp;", "&amp;lt;",
            "&amp;gt;", and "&amp;quot;". Other characters that would
            not be valid in the HTML document or that cannot be
            represented in the document's character encoding MUST be
            escaped using the percent-encoding (%xx) mechanism
            described in <xref target='RFC3986' />.
            -->
          </t>

          <t>
            <xref target="compat_mode">OpenID Authentication 1.1 互換モード</xref>のセクションで述べたように、これらのディスカバリタグは前バージョンのプロトコルとは同じではない。送られるデータに変更はないが、RP が使用するプロトコルのバージョンを決定できるように名称が変更された。RP は、バージョン 1.1 および 2.0 の両方のプロバイダを通知するために HTML ベースのディスカバリを利用する主張識別子に遭遇することもある (MAY)。
            <!--
            As discussed in the <xref
            target="compat_mode">OpenID Authentication 1.1
            Compatibility mode</xref> section, these discovery tags
            are not the same as in previous versions of the protocol.
            While the same data is conveyed, the names have changed which
            allows a Relying Party to determine the protocol version
            being used.  A Relying Party MAY encounter a Claimed Identifier
            which uses HTML-Based Discovery to advertise both version 1.1
            and 2.0 Providers.
            -->
          </t>
        </section>
      </section>
    </section>

    <section title="アソシエーションの確立" anchor="associations">
    <!-- section title="Establishing Associations" anchor="associations" -->
      <t>
        RP と OP との間でアソシエーションを確立すると、共有秘密鍵が発行される。この共有秘密鍵を、その後両者間で交換されるプロトコルメッセージの検証に用いることで、メッセージのやりとりを減らすことができる。
        <!--
        An association between the Relying Party and the OpenID Provider
        establishes a shared secret between them, which is used to verify
        subsequent protocol messages and reduce round trips.
        -->
      </t>

      <t>
        RP がアソシエーションを形成できる場合は、アソシエーションを形成することが推奨される (RECOMMENDED)。RP がアソシエーションを構築・保持できない場合は、<xref target="check_auth" /> に示される代わりの検証の仕組みを用いる。この仕組みは、ステートレスモード (Stateless Mode) と呼ばれる。
        <!--
        It is RECOMMENDED that a Relying Party form associations if it
        is possible for it to do so.  If a Relying Party is incapable
        of creating or storing associations, <xref target="check_auth" />
        provides an alternate verification mechanism referred to as
        Stateless Mode.
        -->
      </t>

      <section title="アソシエーションセッション要求">
      <!-- section title="Association Session Request" -->
        <t>
          アソシエーションセッション (Association Session) は、RP から OP エンドポイント URL に対して、"openid.mode" が "associate" である<xref target="direct_comm">直接要求</xref>を行なうことよって開始される。
          <!--
          An association session is initiated by a <xref
          target="direct_comm">direct request</xref> from a Relying
          Party to an OP Endpoint URL with the "openid.mode" key
          having the value of "associate".
          -->
        </t>

        <section title="共通の要求パラメータ" toc="exclude">
        <!-- section title="Common Request Parameters" toc="exclude" -->
          <t>
            以下のパラメータは、全てのアソシエーション要求において共通して用いられる。
            <!--
            These parameters are common to all association requests:
            -->
          </t>
          <t>
            <list style="symbols">
              <t>openid.ns
                <list style='empty'>
                  <t>
                    <xref target="http_encoding" /> で指定した通り。
                    <!--
                    As specified in <xref target="http_encoding" />.
                    -->
                  </t>
                </list>
              </t>
              <t>openid.mode
                <list style="empty">
                  <t>値："associate"</t>
                  <!-- t>Value: "associate"</t -->
                </list>
              </t>

              <t>openid.assoc_type
                <list style="empty">
                  <t>
                    推奨されるアソシエーション形式。アソシエーション形式は、以後のメッセージの署名を行なう際に用いられるアルゴリズムを定義するためのものである。
                  </t>
                  <t>
                    値：<xref target="assoc_types"/> で指定される有効なアソシエーション形式から選択。
                  </t>
                  <!-- t> The preferred association type.  The association
                    type defines the algorithm to be used to sign
                    subsequent messages.</t>
                  <t> Value: A valid association type from <xref
                  target="assoc_types"/></t -->
                </list>
              </t>

              <t>openid.session_type
                <list style='empty'>
                  <t>
                    推奨されるアソシエーションセッション形式。データ送信中にアソシエーションの MAC 鍵の暗号化に用いる方法を定義する。
                    <!--
                    The preferred association session type.  This
                    defines the method used to encrypt the association's
                    MAC key in transit.
                    -->
                  </t>
                  <t>
                    値：<xref target="assoc_sess_types"/> で指定される有効なアソシエーションセッション形式から選択。
                    <!--
                    Value: A valid association session type from
                    <xref target="assoc_sess_types"/>.
                    -->
                  </t>
                  <t>
                    注：トランスポート層の暗号化を使用していない場合は、"no-encryption" を用いてはならない (MUST NOT)。
                    <!--
                    Note: Unless using transport layer encryption, 
                    "no-encryption" MUST NOT be used.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>
        </section>

        <section title="Diffie-Hellman 要求パラメータ" toc="exclude">
        <!-- section title="Diffie-Hellman Request Parameters" toc="exclude" -->
          <t>
            以下のパラメータは、要求するアソシエーションセッション形式が "DH-SHA1" の要求および "DH-SHA256" の要求の両方の場合に共通して用いられる:
            <!--
            The following parameters are common to requests whose
            requested association session type is "DH-SHA1" or
            "DH-SHA256":
            -->
          </t>
          <t>
            <list style="symbols">
              <t>
                openid.dh_modulus
                <list style='empty'>
                  <t>
                    値： base64(btwoc(p))
                  </t>
                  <t>
                    デフォルト値：<xref target='pvalue' /> 参照
                  </t>
                  <!-- t>Value: base64(btwoc(p))</t>
                  <t>Default: See <xref target='pvalue' /></t -->
                </list>
              </t>
              <t>
                openid.dh_gen
                <list style='empty'>
                  <t>
                    値： base64(btwoc(g))
                  </t>
                  <t>
                    デフォルト値：g = 2
                  </t>
                  <!-- t>Value: base64(btwoc(g))</t>
                  <t>Default: g = 2</t -->
                </list>
              </t>
              <t>
                openid.dh_consumer_public
                <list style='empty'>
                  <t>
                    値： base64(btwoc(g ^ xa mod p))
                  </t>
                  <!-- t>Value: base64(btwoc(g ^ xa mod p))</t -->
                </list>
              </t>
            </list>
          </t>
          <t>
            これらのパラメータに関する詳細は、<xref target="dh_sessions"/> 参照。
            <!--
            See <xref target="dh_sessions"/> for more information on
            these parameters.
            -->
          </t>
          <t>
            注： 'btwoc' 関数については、<xref target="btwoc"/> で定義した通りである。
            <!--
            NOTE: The 'btwoc' function is defined in <xref
            target="btwoc"/>.
            -->
          </t>
        </section>
      </section>

      <section title="アソシエーションセッション応答">
      <!-- section title="Association Session Response" -->
        <t>
          アソシエーションセッション応答は、OP から RP に対して行なう<xref target="kvform">キー・バリュー形式</xref>での直接応答である。
          <!--
          An association session response is a direct response from the
          OP to the Relying Party in <xref target="kvform">Key-Value
          Form</xref>.
          -->
        </t>

        <section title="共通の応答パラメータ">
        <!-- section title="Common Response Parameters" -->
          <t>
            <list style="symbols">
              <t>
                ns
                <list style="empty">
                  <t>
                    <xref target="direct_response" /> で指定した通り。
                    <!--
                    As specified in <xref target="direct_response" />.
                    -->
                  </t>
                </list>
              </t>
              <t>
                assoc_handle
                <list style="empty">
                  <t>
                    アソシエーションハンドル (association handle) は、以後のメッセージにおいて、このアソシエーションを参照するキーとして用いられる。
                    <!--
                    The association handle is used as a key to refer
                    to this association in subsequent messages.
                    -->
                  </t>
                  <t>
                    値： 長さが 255 文字以下の文字列。33-126 の範囲に含まれる ASCII 文字 (空白を除く印刷可能な文字) のみで構成しなければならない (MUST)。
                    <!--
                    Value: A string 255 characters or less in length.
                    It MUST consist only of ASCII characters in the
                    range 33-126 inclusive (printable non-whitespace
                    characters).
                    -->
                  </t>
                </list>
              </t>
              <t>
                session_type
                <list style="empty">
                  <t>
                    要求の中の "openid.session_type" パラメータの値。OP がこのアソシエーション形式をサポートしたくない、あるいはサポートできない場合は、<xref target="refuse_assoc">失敗時の応答</xref>を戻さなければならない (MUST)。
                    <!-- NOTICE: "このアソシエーション形式" should be "このセッション形式" ?? -->
                    <!--
                    The value of the "openid.session_type" parameter
                    from the request.  If the OP is unwilling or
                    unable to support this association type, it MUST
                    return an <xref target="refuse_assoc">unsuccessful
                    response</xref>.
                    -->
                  </t>
                </list>
              </t>
              <t>
                assoc_type
                <list style="empty">
                  <t>
                    要求の中の "openid.assoc_type" パラメータの値。OP がこのアソシエーション形式をサポートしたくない、あるいはサポートできない場合は、<xref target="refuse_assoc">失敗時の応答</xref>を戻さなければならない (MUST)。
                    <!--
                    The value of the "openid.assoc_type" parameter
                    from the request.  If the OP is unwilling or
                    unable to support this association type, it MUST
                    return an <xref target="refuse_assoc">unsuccessful
                    response</xref>.
                    -->
                  </t>
                </list>
              </t>
              <t>
                expires_in
                <list style="empty">
                  <t>
                    このアソシエーションの有効期限 (単位：秒)。RP は、当該期限を経過した後に、そのアソシエーションを使用してはならない (MUST NOT)。
                    <!--
                    The lifetime, in seconds, of this association.
                    The Relying Party MUST NOT use the association
                    after this time has passed.
                    -->
                  </t>
                  <t>
                    値： 整数値、ASCII 文字 10 進数表現。
                    <!--
                    Value: An integer, represented in base 10 ASCII.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>
        </section>

        <section title="暗号化されない応答パラメータ">
        <!-- section title="Unencrypted Response Parameters" -->
          <t>
            <list style="symbols">
              <t>
                mac_key
                <list style='empty'>
                  <t>
                    このアソシエーションの MAC 鍵 (共有秘密鍵) で、<xref target="RFC3548">Base 64</xref> でエンコードしたもの。
                    <!--
                    The MAC key (shared secret) for this
                    association, <xref target="RFC3548">Base 64</xref>
                    encoded.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>
        </section>

        <section title='Diffie-Hellman 応答パラメータ' toc="exclude">
        <!-- section title='Diffie-Hellman Response Parameters' toc="exclude" -->
          <t>
            <list style="symbols">
              <t>
                dh_server_public
                <list style='empty'>
                  <t>
                    値： base64(btwoc(g ^ xb mod p))
                    <!--
                    Value: base64(btwoc(g ^ xb mod p))
                    -->
                  </t>
                  <t>
                    説明： OP の Diffie-Hellman 公開鍵。
                    <!--
                    Description: The OP's Diffie-Hellman public key.
                    -->
                  </t>
                </list>
              </t>
              <t>
                enc_mac_key
                <list style='empty'>
                  <t>
                    値： base64(H(btwoc(g ^ (xa * xb) mod p)) XOR MAC 鍵)
                    <!--
                    Value: base64(H(btwoc(g ^ (xa * xb) mod p)) XOR MAC key)
                    -->
                  </t>
                  <t>
                    説明： MAC 鍵 (共有秘密鍵) で、秘密の Diffie-Hellman 値を用いて暗号化したもの。セッション形式に応じて、ハッシュ関数 H は "SHA1" 、"SHA256" のいずれかとなる。
                    <!--
                    Description: The MAC key (shared secret),
                    encrypted with the secret Diffie-Hellman value. H
                    is either "SHA1" or "SHA256" depending on the
                    session type.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>
          <t>
            注： 'btwoc' 関数については、<xref target="btwoc"/> で定義した通りである。
            <!--
            NOTE: The 'btwoc' function is defined in <xref
            target="btwoc"/>
            -->
          </t>
        </section>

        <section anchor="refuse_assoc" title="失敗時の応答パラメータ">
        <!-- section anchor="refuse_assoc" title="Unsuccessful Response Parameters" -->
          <t>
            OP がセッション形式やアソシエーション形式をサポートしていない場合、アソシエーション要求が失敗したことを示す直接のエラーメッセージを含む応答を返さなければならない (MUST)。他のアソシエーションセッション形式またはアソシエーション形式をサポートしている場合、OP は、応答にその情報を含めるべきである。
            <!--
            If the OP does not support a session type or association
            type, it MUST respond with a direct error message
            indicating that the association request failed. If there
            is another association session type or association type
            that is supported, the OP SHOULD include that information
            in the response.
            -->
          </t>
          <t>
            <list style='symbols'>
              <t>
                ns
                <list style="empty">
                  <t>
                    <xref target="direct_response" /> で指定した通り。
                    <!--
                    As specified in <xref target="direct_response" />.
                    -->
                  </t>
                </list>
              </t>
              <t>
                error
                <list style='empty'>
                  <t>
                    値： 人間が解読可能なメッセージ。アソシエーション要求が失敗した理由を示す。
                    <!--
                    Value: A human-readable message indicating why the
                    association request failed.
                    -->
                  </t>
                </list>
              </t>
              <t>
                error_code
                <list style='empty'>
                  <t>
                    値： "unsupported-type"
                    <!--
                    Value: "unsupported-type"
                    -->
                  </t>
                </list>
              </t>
              <t>
                session_type
                <list style='empty'>
                  <t>
                    値： (オプション) <xref target="assoc_sess_types" /> に示される有効なアソシエーションセッション形式のうち、OP がサポートしているもの。
                    <!--
                    Value: (optional) A valid association session type
                    from <xref target="assoc_sess_types" /> that the
                    OP supports.
                    -->
                  </t>
                </list>
              </t>
              <t>
                assoc_type
                <list style='empty'>
                  <t>
                    値： (オプション) <xref target="assoc_types" /> に示されるアソシエーション形式のうち、OP がサポートしているもの。
                    <!--
                    Value: (optional) An association type supported by
                    the OP from <xref target="assoc_types" />.
                    -->
                  </t>
                </list>
              </t>
            </list>
          </t>
          <t>
            "unsupported-type" の応答を受け取ったとき、RP は、アソシエーションセッション形式およびアソシエーション形式を指定して、再度、要求を行なってもよい (MAY)。アソシエーションが確立できない場合、RP は、<xref target="check_auth">直接検証</xref>の形で認証プロセスを継続してもよい (MAY)。
            <!--
            Upon receipt of an "unsupported-type" response, the
            Relying Party MAY make another request with the specified
            association session type and association type. If no
            association is established, the Relying Party MAY continue
            the authentication process in <xref target="check_auth">
            Direct Verification</xref>.
            -->
          </t>
        </section>
      </section>

      <section title="アソシエーション形式" anchor="assoc_types">
      <!-- section title="Association Types" anchor="assoc_types" -->
        <section title="HMAC-SHA1">
          <t>
            "HMAC-SHA1" 形式のアソシエーションでは、<xref target="sign_algos">HMAC-SHA1</xref> 署名アルゴリズムを用いる。
            <!--
            An association of type "HMAC-SHA1" uses the <xref
            target="sign_algos">HMAC-SHA1</xref> signature algorithm.
            -->
          </t>
        </section>

        <section title="HMAC-SHA256">
          <t>
            "HMAC-SHA256" 形式のアソシエーションでは、<xref target="sign_algos">HMAC-SHA256</xref> 署名アルゴリズムを用いる。
            <!--
            An association of type "HMAC-SHA256" uses the <xref
            target="sign_algos">HMAC-SHA256</xref> signature
            algorithm.
            -->
          </t>
        </section>
      </section>

      <section title="アソシエーションセッション形式" anchor="assoc_sess_types">
      <!-- section title="Association Session Types" anchor="assoc_sess_types" -->
        <t>
          OpenID 認証では、"no-encryption" 、"DH-SHA1" 、"DH-SHA256" の3 種類の有効なアソシエーションセッション形式が定義されている。
          <!--
          OpenID Authentication defines three valid association
          session types: "no-encryption", "DH-SHA1", and "DH-SHA256".
          -->
        </t>

        <section title="暗号化されないアソシエーションセッション" toc="exclude">
        <!-- section title="No-Encryption Association Sessions" toc="exclude" -->
          <t>
            "no-encryption" 形式のアソシエーションセッションでは、そのアソシエーションの MAC 鍵が OP から RP にプレーンテキストで送られる。そのため、トランスポート層での暗号化を行わない場合、悪意ある第三者がその鍵を傍受し、受信する RP に対してメッセージを改ざんすることが可能となる。従って、メッセージがトランスポート層での暗号化を行わない場合は、"no-encryption" 形式のアソシエーションセッションを用いてはならない (MUST NOT)。詳しくは、<xref target="preventing_eavesdropping" /> を参照。
            <!--
            In a "no-encryption" association session, the OP sends
            the association MAC key in plain-text to the Relying Party.
            This makes it possible for an eavesdropper to intercept
            the key, and forge messages to this Relying Party when not
            using transport layer encryption.  Therefore, "no-encryption"
            association sessions MUST NOT be used unless the messages
            are using transport layer encryption. See <xref target="preventing_eavesdropping" />
            for more information.
            -->
          </t>

          <t>
            OP から送られる MAC 鍵 は、<xref target="sign_algos" /> で指定した通り、要求されたアソシエーション形式で指定されている長さでなければならない。
            <!--
            The MAC key sent by the OP MUST be the length specified
            for the requested association type, as specified in <xref
            target="sign_algos" />.
            -->
          </t>

        </section>

        <section title="Diffie-Hellman アソシエーションセッション" anchor="dh_sessions" toc="exclude">
        <!-- section title="Diffie-Hellman Association Sessions" anchor="dh_sessions" toc="exclude" -->
          <t>
            "DH-SHA1" および "DH-SHA256" アソシエーション形式では、秘密共有鍵を安全に送信するために、Diffie-Hellman 鍵交換を用いる。
            <!--
            The "DH-SHA1" and "DH-SHA256" association types use
            Diffie-Hellman Key Exchange to securely transmit the
            shared secret.
            -->
          </t>
          <t>
            MAC 鍵 の長さは、ハッシュ関数 H の出力および、当該アソシエーションの署名アルゴリズムの出力と同じ長さでなければならない (MUST)。つまり、DH-SHA1 の場合は 160 ビット (20 バイト)、DH-SHA256 の場合は 256 ビット (32 バイト) となる。
            <!--
            The MAC key MUST be the same length as the output of H,
            the hash function - 160 bits (20 bytes) for DH-SHA1 or 256
            bits (32 bytes) for DH-SHA256, as well as the output of
            the signature algorithm of this association.
            -->
          </t>

          <t>
            RP は、モジュラス (法)  p とジェネレータ (原始元)  g を指定する。また、RP は任意の秘密鍵 xaをランダムに選び、OP は任意の秘密鍵 xb を選ぶ。これらの秘密鍵はともに、[1 .. p-1] の範囲に含まれていなければならない。このとき MAC 鍵の暗号化に用いる秘密共有鍵は、g ^ (xa * xb) mod p = (g ^ xa) ^ xb mod p = (g ^ xb) ^ xa mod p となる。詳しくは、<xref target='RFC2631' /> を参照のこと。また、ランダム値の選択に関する詳細は、<xref target="RFC1750" /> を参照。
            <!--
            The Relying Party specifies a modulus, p, and a generator,
            g. The Relying Party chooses a random private key xa and
            OpenID Provider chooses a random private key xb, both in
            the range [1 .. p-1]. The shared secret used to encrypt
            the MAC key is thus g ^ (xa * xb) mod p = (g ^ xa) ^ xb
            mod p = (g ^ xb) ^ xa mod p. For more information, see
            <xref target='RFC2631' />. For information on the
            selection of random values, see <xref target="RFC1750" />.
            -->
          </t>
        </section>
      </section>
    </section>

    <section title="認証要求" anchor="requesting_authentication">
      <t>
        RP がディスカバリの実行に成功し、ディスカバリによって得られた OP エンドポイント URL とアソシエーションを構築 (オプション) すれば、RP は、アサーションを得るために OP に認証要求を送ることができる。認証要求は、<xref target="indirect_comm">間接要求</xref>である。
      <!--
      Once the Relying Party has successfully performed discovery and 
      (optionally) created an association with the discovered OP 
      Endpoint URL, it can send an authentication request to the OP 
      to obtain an assertion. An authentication request is 
      an indirect request.
      -->
      </t>

      <section title="要求パラメータ">
        <t>
          <list style='symbols'>
            <t>
              openid.ns
              <list style='empty'>
                <t>
                  <xref target="http_encoding" />で指定した通り。
                <!--
                As specified in Section 4.1.2.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.mode
              <list style='empty'>
                <t>
                  値： "checkid_immediate" または "checkid_setup"
                <!--
                Value: "checkid_immediate" or "checkid_setup"
                -->
                </t>
                <t>
                  注： RP がエンドユーザと OP との対話を望む場合は、"checkid_setup" を用いるべきである。エンドユーザと OP との対話を望まない状況の例として、JavaScript の中で非同期の認証要求が生じた場合があげられる。
                <!--
                Note: If the Relying Party wishes the end user to be able to 
                interact with the OP, "checkid_setup" should be used. 
                An example of a situation where interaction between the end user 
                and the OP is not desired is when the authentication request is 
                happening asynchronously in JavaScript.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.claimed_id
              <list style='empty'>
                <t>
                  値： (オプション)  主張識別子。
                <!--
                Value: (optional) The Claimed Identifier.
                -->
                </t>
                <t>
                  "openid.claimed_id" と "openid.identity" については、両方がともに存在するか、ともに存在しないかのいずれかとする (SHALL)。どちらの値も存在しない場合、そのアサーションは識別子に関するものではなく、<xref target="extensions">拡張仕様</xref>を用いて、ペイロードにその他の情報が含まれることになる。
                <!--
                "openid.claimed_id" and "openid.identity" SHALL be either both 
                present or both absent. If neither value is present, the assertion 
                is not about an identifier, and will contain other information in 
                its payload, using extensions.
                -->
                </t>
                <t>
                  OP は、<xref target="normalization">正規化</xref>のセクションで示した通り、"xri://" プリフィックスを伴った XRI 識別子または "xri://" プリフィックスを伴わない XRI 識別子を受け入れることが推奨される (RECOMMENDED)。
                <!--
                It is RECOMMENDED that OPs accept XRI identifiers with or without 
                the "xri://" prefix, as specified in the Normalization section.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.identity
              <list style='empty'>
                <t>
                  値： (オプション)  OP ローカル識別子。
                <!--
                Value: (optional) The OP-Local Identifier.
                -->
                </t>
                <t>
                  openid.identity の値に異なる OP ローカル識別子 が指定されていない場合は、その値として主張識別子を用いなければならない (MUST)。
                <!--
                If a different OP-Local Identifier is not specified, the claimed 
                identifier MUST be used as the value for openid.identity.
                -->
                </t>
                <t>
                  注： openid.identity に "http://specs.openid.net/auth/2.0/identifier_select" という特殊値が設定されている場合、OP は、エンドユーザに属する識別子を選択すべきである (SHOULD)。このパラメータは、要求が識別子に関するものでない場合 (例えば、拡張仕様が使用され、当該パラメータがなくても要求が意味をなす場合。上記 openid.claimed_id 参照)、省略してもよい (MAY)。
                <!--
                Note: If this is set to the special value 
                "http://specs.openid.net/auth/2.0/identifier_select" 
                then the OP SHOULD choose an Identifier that belongs to the end user. 
                This parameter MAY be omitted if the request is not about an identifier 
                (for instance if an extension is in use that makes the request meaningful 
                without it; see openid.claimed_id above).
                -->
                </t>
              </list>
            </t>

            <t>
              openid.assoc_handle
              <list style='empty'>
                <t>
                  値： (オプション)  RP と OP の間のアソシエーションハンドル。応答に署名するために用いるべきである (SHOULD)。
                <!--
                Value: (optional) A handle for an association between the Relying Party and 
                the OP that SHOULD be used to sign the response.
                -->
                </t>
                <t>
                  注：アソシエーションハンドルが送られない場合、トランザクションは、<xref target="check_auth">ステートレスモードで</xref>行われる。
                <!--
                Note: If no association handle is sent, the transaction will take place in 
                Stateless Mode.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.return_to
              <list style='empty'>
                <t>
                  値： (オプション)  OP が要求のステータスを示す応答とともにユーザエージェントを戻すべき (SHOULD) URL。
                <!--
                Value: (optional) URL to which the OP SHOULD return the User-Agent with 
                the response indicating the status of the request.
                -->
                </t>
                <t>
                  注：送られた要求の中にこの値が記されていない場合、エンドユーザが戻されることを RP は望んでいないということを意味している。
                <!--
                Note: If this value is not sent in the request it signifies that the Relying 
                Party does not wish for the end user to be returned.
                -->
                </t>
                <t>
                  注：認証要求に関するコンテキストを RP が認証応答に添付する仕組みとして、return_to URL を利用してもよい (MAY)。本文書では、クエリパラメータが外部の第三者によって変更されないことを RP が保証できる仕組みは定義していない。このような仕組みは、RP 自身で定義することができる。
                <!--
                Note: The return_to URL MAY be used as a mechanism for the Relying Party to 
                attach context about the authentication request to the authentication response. 
                This document does not define a mechanism by which the RP can ensure that query 
                parameters are not modified by outside parties; such a mechanism can be defined 
                by the RP itself.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.realm
              <list style='empty'>
                <t>
                  値： (オプション)  OP がエンドユーザに信任を求めるべきである (SHOULD) URL のパターン。<xref target="realms" />参照。openid.return_to を省略した場合は、この値を送らなければならない(MUST)。
                <!--
                Value: (optional) URL pattern the OP SHOULD ask the end user to trust. 
                See Section 9.2. This value MUST be sent if openid.return_to is omitted.
                -->
                </t>
                <t>
                  デフォルト値： return_to URL
                <!--
                Default: return_to URL
                -->
                </t>
              </list>
            </t>
          </list>
        </t>
      </section>

      <section title="レルム" anchor="realms">
        <t>
          レルム (realm) とは、OpenID 認証要求が有効な URL 空間を表すパターンである。レルムは、認証要求の対象範囲をエンドユーザに知らせるために考案された。エンドユーザに認証要求の承諾を求める際、OP はレルムを提示すべきである (SHOULD)。レルムは、OP が RP を一意に特定するために用いるべきである (SHOULD)。例えば、OP は、エンドユーザが認証要求の承認を自動化できるようにするために、レルムを用いてもよい (MAY)。
          <!--
          A "realm" is a pattern that represents the part of URL-space for which 
          an OpenID Authentication request is valid. A realm is designed to give 
          the end user an indication of the scope of the authentication request. 
          OPs SHOULD present the realm when requesting the end user's approval 
          for an authentication request. The realm SHOULD be used by OPs to 
          uniquely identify Relying Parties. For example, OPs MAY use the realm 
          to allow the end user to automate approval of authentication requests.
          -->
        </t>

        <t>
          レルムパターンは URL であるが、以下の点が異なっている。
        <!--
        A realm pattern is a URL, with the following changes:
        -->
          <list style="symbols">
            <t>
              レルムは、URI フラグメントを含んでいてはならない (MUST NOT)
            <!--
            A realm MUST NOT contain a URI fragment
            -->
            </t>
            <t>
              レルムは、URL のオーソリティセクションの先頭にワイルドカードを含んでいてもよい (MAY)。ワイルドカードは、"*." の文字列からなり、URL のオーソリティセクションの DNS 名の前に付加される。
            <!--
            A realm MAY contain a wild-card at the beginning of the URL authority section. A wild-card consists of the characters "*." prepended to the DNS name in the authority section of the URL.
            -->
            </t>
          </list>
        </t>

        <t>
          以下の条件を満たす場合、URL はレルムにマッチする。
        <!--
        A URL matches a realm if:
        -->
          <list style="symbols">
            <t>
              URL スキームおよび URL のポートがレルムの中のスキームおよびポートと同一である。URI マッチングに関する規則については、<xref target="RFC3986">RFC 3986</xref>、Section 3.1 参照。
            <!--
              The URL scheme and port of the URL are identical to those
              in the realm.  See <xref target="RFC3986">RFC
              3986</xref>, section 3.1 for rules about URI matching.
            -->
            </t>

            <t>
              URL のパスが、レルムのパスと同一、もしくはそのサブディレクトリである。
            <!--
            The URL's path is equal to or a sub-directory of the realm's path.
            -->
            </t>

            <t>
              以下のいずれかが成り立つ。<!-- Either: -->
              <list style="numbers">
                <t>
                  レルムのドメインがワイルドカード文字 "*." を含み、URL のドメインの末尾部分がワイルドカード "*." に続くレルム部分と同一である。
                <!--
                The realm's domain contains the wild-card characters "*.", and 
                the trailing part of the URL's domain is identical to the part 
                of the realm following the "*." wildcard, or
                -->
                </t>
                <t>
                  URL のドメインがレルムのドメインと同一である。
                <!--
                The URL's domain is identical to the realm's domain
                -->
                </t>
              </list>
             </t>
          </list>
          "openid.return_to" URL が存在するとき、"openid.return_to" URL は "openid.realm" とマッチしなければならない (MUST)。マッチしない場合、OP は、<xref target="indirect_error">エラー時の間接応答</xref>を返さなければならない (MUST)。
          <!--
          When present, the "openid.return_to" URL MUST match the "openid.realm", 
          or the OP MUST return an indirect error response.
          -->
        </t>

        <t>
          OP は、http://*.com/ や http://*.co.uk/ などあまりにも汎用的なレルムを用いてエンドユーザがアサーションを行なわないようにすることが推奨される (RECOMMENDED)。あまりにも汎用的なレルムは、特定の RP の識別に用いるときには、危険である場合がある。レルムが汎用的過ぎるかどうかの判断は、OP に委ねられている。
        <!--
        It is RECOMMENDED that OPs protect their users from making assertions 
        with overly-general realms, like http://*.com/ or http://*.co.uk/. 
        Overly general realms can be dangerous when the realm is used for 
        identifying a particular Relying Party. Whether a realm is overly-general 
        is at the discretion of the OP.
        -->
        </t>

        <section title="レルムを用いた戻りURLの検証"
                 anchor="return_to_verification">
          <t>
            OP は、要求において指定された return_to URL が OpenID RP のエンドポイントであることを検証すべきである (SHOULD)。return_to URL の検証を行なうには、<xref target="rp_discovery">RP に対するディスカバリ</xref>を実行し、レルムに対する RP のエンドポイントを取得する。ディスカバリを実行すると、その結果得られる URL は常に、リダイレクトを辿った先の最後の HTTP 応答の URL となる。レルムに対してディスカバリを実行したとき、その後何らかのリダイレクトが生じた場合、検証に失敗したことになる。ディスカバリが正常に完了したときは、return_to URL が RP のエンドポイントのひとつと一致することを確認する。
          <!--
          OpenID providers SHOULD verify that the return_to URL specified in the 
          request is an OpenID relying party endpoint. To verify a return_to URL, 
          obtain the relying party endpoints for the realm by performing discovery 
          on the relying party. As always when performing discovery, the discovered 
          URL is the URL of the last HTTP response, following redirects. If any 
          redirects are followed when performing discovery on the realm, verification 
          has failed. If discovery has successfuly completed, check to make sure that 
          the return_to URL matches one of the relying party endpoints.
          -->
          </t>
          <t>
            レルムはワイルドカードを含む場合があり、そのため有効なURLでないことがある。この場合は、レルムの中のワイルドカードを "www" に置き換え、その結果得られる URL に関してディスカバリを実行する。
          <!--
          A realm may contain a wildcard, and so may not be a valid URL. In that case, 
          perform discovery on the URL obtained by substituting "www" for the wildcard 
          in the realm.
          -->
          </t>
          <t>
            return_to URL を RP のエンドポイントと照合するためには、RP のエンドポイント URL をレルムとして扱い、return_to URL をレルムと照合するために用いたのと同じ規則を適用する。RP の エンドポイント URL は、ドメインのワイルドカードを含んではならず (MUST NOT)、可能な限り、固有のものであるべきである (SHOULD)。
          <!--
          To match a return_to URL against a relying party endpoint, use the same 
          rules as for matching the return_to URL against the realm, treating the 
          relying party's endpoint URL as the realm. Relying party endpoint URLs 
          MUST NOT contain a domain wildcard, and SHOULD be as specific as possible.
          -->
          </t>
          <t>
            検証を試みても失敗した場合、プロバイダは、その return_to URL に肯定アサーション (positive assertion) を送るべきではない (SHOULD NOT)。
          <!--
          If verification is attempted and fails, the provider SHOULD NOT send 
          a positive assertion to that return_to URL.
          -->
          </t>
          <t>
            プロバイダは、検証済みの return_to URL をキャッシュしてもよい (MAY)。
          <!--
          Providers MAY cache verified return_to URLs.
          -->
          </t>
        </section>
      </section>

      <section title="即時要求">
        <t>
          RP は、認証要求に当り、OP がエンドユーザとの対話を行なわないことを要求してもよい (MAY)。この場合、OP は即時に、認証成功のアサーション、または、ユーザとさらに対話を行なわないと要求が完了できないことを示す応答のいずれかを返さなければならない (MUST)。即時要求は、認証要求の "openid.mode" に "checkid_immediate" という値を設定することによって実現できる。
        <!--
        When requesting authentication, the Relying Party MAY request that the 
        OP not interact with the end user. In this case the OP MUST respond 
        immediately with either an assertion that authentication is successful, 
        or a response indicating that the request cannot be completed without 
        further user interaction. This is accomplished by an authentication 
        request with "openid.mode" set to "checkid_immediate".
        -->
        </t>
      </section>
    </section>

    <section title="認証要求に対する応答"
             anchor="responding_to_authentication">
      <t>
        <xref target="indirect_comm">間接通信</xref>を通じてユーザエージェントから認証要求を受け取ったときには、OP は、認可済みの正規のエンドユーザが認証完了を望んでいると判断すべきである (SHOULD)。認可済みの正規のエンドユーザが認証完了を望んでいる場合、OP は、RP に<xref target="positive_assertions">肯定アサーション</xref>を送るべきである (SHOULD)。
      <!--
      When an authentication request comes from the User-Agent via indirect 
      communication, the OP SHOULD determine that an authorized end user wishes 
      to complete the authentication. If an authorized end user wishes to complete 
      the authentication, the OP SHOULD send a positive assertion to the Relying Party.
      -->
      </t>
      <t>
        認可済みのエンドユーザの識別方法および OpenID 認証アサーションを戻す上で必要な承諾の取得方法については、本仕様の対象範囲外である。OP のセキュリティに関する考慮事項については、<xref target="rp_mitm_proxy" />参照のこと。
      <!--
      Methods of identifying authorized end users and obtaining approval to return an 
      OpenID Authentication assertion are beyond the scope of this specification. 
      See Section 15.1.2.1 for OpenID Provider security considerations.
      -->
      </t>
      <t>
        "openid.identity" に "http://specs.openid.net/auth/2.0/identifier_select" という値を設定することによって OP 主導での識別子選択を RP が要求し、エンドユーザが認証応答の発行を認可される複数の識別子がある場合、OP は、エンドユーザがどの識別子を使用するのかを選択できるようにすべきである (SHOULD)。
      <!--
      If the relying party requested OP-driven identifier selection by setting 
      "openid.identity" to "http://specs.openid.net/auth/2.0/identifier_select" 
      and there are Identifiers for which the end user is authorized to issue 
      authentication responses, the OP SHOULD allow the end user to choose which 
      Identifier to use.
      -->
      </t>
      <t>
        RP が認証要求にアソシエーションハンドルを付与した場合、OP は、そのハンドルをもとにしてアソシエーションを探すべきである (SHOULD)。アソシエーションが見つからないか有効期限切れで失効している場合、OP は、応答の一部として、要求の "openid.assoc_handle" パラメータと同じ値で"openid.invalidate_handle" パラメータを送り返すべきである (SHOULD)。さらに OP は、アソシエーションハンドルが指定されなかった場合と同様に、処理を継続すべきである (SHOULD)。
      <!--
      If the Relying Party supplied an association handle with the authentication 
      request, the OP SHOULD attempt to look up an association based on that handle. 
      If the association is missing or expired, the OP SHOULD send the 
      "openid.invalidate_handle" parameter as part of the response with the value 
      of the request's "openid.assoc_handle" parameter, and SHOULD proceed as if 
      no association handle was specified.
      -->
      </t>
      <t>
        アソシエーションハンドルの指定がない場合、OP は、応答への署名に専用のアソシエーションを用いるべきである (SHOULD)。OP は、このアソシエーションを記憶しなければならない (MUST)。また、その後の要求に応答し、<xref target="check_auth">直接検証</xref>を通じて応答の署名をチェックしなければならない (MUST)。
      <!--
      If no association handle is specified, the OP SHOULD use a private association
      for signing the response. The OP MUST store this association and MUST respond 
      to later requests to check the signature of the response via Direct Verification.
      -->
      </t>
      <t>
        RP は、認証要求を済ませていない識別子に関するアサーションを受け入れ、検証すべきである (SHOULD)。OP は、一方的な (unsolicited) 肯定アサーションの署名に専用のアソシエーションを用いるべきである (SHOULD)
      <!--
      Relying Parties SHOULD accept and verify assertions about Identifiers for which 
      they have not requested authentication. OPs SHOULD use private associations for 
      signing unsolicited positive assertions.
      -->
      </t>
      <t>
        要求時に "openid.return_to" の値が省略されている場合、RP は認証アサーションを OP から受け取ることを望んでいない。これは、RP から OP へのデータ送信に拡張機能を用いている場合に役立つ。
      <!--
      If the "openid.return_to" value is omitted in the request, the Relying Party does 
      not wish to receive an authentication assertion from the OP. This can be useful 
      when using extensions to transfer data from the Relying Party to the OP.
      -->
      </t>

      <section title="肯定アサーション" anchor="positive_assertions">
        <t>
          肯定アサーションのフィールドは、以下の通り。<xref target="indirect_comm">間接通信</xref>で行う。
        <!--
        Positive assertions are <xref target="indirect_comm">indirect responses</xref> with the following fields:
        -->
        </t>
        <t>
          <list style='symbols'>
            <t>
              openid.ns
              <list style='empty'>
                <t>
                  <xref target="http_encoding" /> 指定した通り。
                <!--
                As specified in <xref target="http_encoding" />
                -->
                </t>
              </list>
            </t>

            <t>
              openid.mode
              <list style='empty'>
                <t>値： "id_res"<!-- Value: "id_res" --></t>
              </list>
            </t>

            <t>
              openid.op_endpoint
              <list style='empty'>
                <t>
                  OP エンドポイント (Endpoint) URL。
                <!--
                The OP Endpoint URL.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.claimed_id
              <list style='empty'>
                <t>
                  値： (オプション) 主張識別子。"openid.claimed_id" と "openid.identity"については、両方がともに存在するか、ともに存在しないかのいずれかとする (SHALL)。
                <!--
                Value: (optional) The Claimed Identifier. "openid.claimed_id" and 
                "openid.identity" SHALL be either both present or both absent.
                -->
                </t>
                <t>
                  注：エンドユーザは、OP ローカル識別子 を主張識別子として 使用することを選択してもよい (MAY)。
                <!--
                Note: The end user MAY choose to use an OP-Local Identifier as a 
                Claimed Identifier.
                -->
                </t>
                <t>
                  注：アサーションにどちらの識別子も存在しない場合、そのアサーションは識別子に関するものではなく、<xref target="extensions">拡張仕様</xref>を用いて、ペイロードにその他の情報が含まれることになる。
                <!--
                Note: If neither Identifier is present in the assertion, it is not about 
                an identifier, and will contain other information in its payload, using 
                extensions.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.identity
              <list style='empty'>
                <t>
                  値： (オプション)  OP ローカル識別子
                 <!-- 
                 Value: (optional) The OP-Local Identifier
                 -->
                </t>
                <t>
                  注：OpenIDプロバイダは、アサーションを作成する対象である主張識別子および OP ローカル識別子の選択において、エンドユーザを支援してもよい (MAY)。拡張仕様が使用され、当該フィールドがなくても応答が意味をなす場合、openid.identity フィールドを省略してもよい (MAY) (上記 openid.claimed_id 参照)。
                <!--
                Note: OpenID Providers MAY assist the end user in selecting the Claimed 
                and OP-Local Identifiers about which the assertion is made. 
                The openid.identity field MAY be omitted if an extension is in use that 
                makes the response meaningful without it (see openid.claimed_id above).
                -->
                </t>
              </list>
            </t>

            <t>
              openid.return_to
              <list style='empty'>
                <t>
                  値： 要求時に送られた return_to URL パラメータそのままのコピー。
                <!--
                Value: Verbatim copy of the return_to URL parameter sent in the request.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.response_nonce
              <list style='empty'>
                <t>
                  値：長さが 255 文字以下の文字列で、この成功した特定の認証応答に固有のものでなければならない (MUST)。ノンスは、サーバの現在時刻で始まらなければならない (MUST)。またノンスには、それぞれの応答を固有のものとする上での必要に応じて、33-126 の範囲に含まれる ASCII 文字 (空白を除く印刷可能な文字) を追加してもよい (MAY)。日付および時刻は [RFC3339] Section 5.6<xref target="RFC3339" />に指定される形式で記述しなければならない (MUST) が、以下の制限がある。
                <!--
                Value: A string 255 characters or less in length, that MUST be unique to 
                this particular successful authentication response. The nonce MUST start 
                with the current time on the server, and MAY contain additional ASCII 
                characters in the range 33-126 inclusive (printable non-whitespace 
                characters), as necessary to make each response unique. The date and 
                time MUST be formatted as specified in section 5.6 of [RFC3339], with 
                the following restrictions:
                -->
                  <list style="symbols">
                    <t>
                      時刻は全て世界協定時 ( UTC ) 時間帯とし、"Z" で示す。
                    <!--
                    All times must be in the UTC timezone, indicated with a "Z".
                    -->
                    </t>
                    <t>
                      小数点以下の秒の記述は認められていない。
                    <!--
                    No fractional seconds are allowed
                    -->
                    </t>
                  </list>

                  例： 2005-05-15T17:11:51ZUNIQUE
                  <!--
                  For example: 2005-05-15T17:11:51ZUNIQUE
                  -->
                </t>
              </list>
            </t>

            <t>
              openid.invalidate_handle
              <list style='empty'>
                <t>
                  値： (オプション) 要求とともに RP が無効なアソシエーションハンドルを送った場合、その値をここに含めるべきである (SHOULD)。
                <!--
                Value: (optional) If the Relying Party sent an invalid association handle 
                with the request, it SHOULD be included here.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.assoc_handle
              <list style='empty'>
                <t>
                  値： このアサーションに署名するために用いられたアソシエーションのハンドル。
                <!--
                Value: The handle for the association that was used to sign this assertion.
                -->
                </t>
              </list>
            </t>

            <t>
              openid.signed
              <list style='empty'>
                <t>
                  値：署名済みフィールドのコンマ区切りのリスト。
                <!--
                Value: Comma-separated list of signed fields.
                -->
                </t>
                <t>
                  注：このエントリは、署名がカバーしているフィールドからなるが、"openid." プリフィックスは省略する。このリストは、少なくとも "op_endpoint"、"return_to"、"response_nonce"、"assoc_handle" を含まなければならない (MUST)。また、応答に存在する場合は、"claimed_id" と "identity" を含まなければならない (MUST)。追加のキーをメッセージの一部として署名してもよい (MAY)。<xref target="generating_signatures">署名の生成</xref>を参照のこと。
                <!--
                Note: This entry consists of the fields without the "openid." prefix 
                that the signature covers. This list MUST contain at least "op_endpoint", 
                "return_to" "response_nonce" and "assoc_handle", and if present in the 
                response, "claimed_id" and "identity". Additional keys MAY be signed 
                as part of the message. See Generating Signatures.
                -->
                </t>
                <t>
                  例："op_endpoint,identity,claimed_id,return_to,assoc_handle,response_nonce"
                <!--
                For example, "op_endpoint,identity,claimed_id,return_to,assoc_handle,
                response_nonce".
                -->
                </t>
              </list>
            </t>

            <t>
              openid.sig
              <list style='empty'>
                <t>
                  値: <xref target="generating_signatures"/> で指定した方法で計算され、Base 64 エンコードされた署名
                <!--
                  Value: Base 64 encoded signature calculated as
                  specified in <xref target="generating_signatures"/>.
                -->
                </t>
              </list>
            </t>

          </list>

        </t>
      </section>

      <section title="否定アサーション" anchor="negative_assertions">
        <t>
          OP がエンドユーザを識別できない場合、あるいは、エンドユーザが認証要求を承諾しない、もしくは承諾できない場合、OP は、RP に対し<xref target="indirect_comm">間接応答</xref>の形で否定アサーション (negative asserton) を送るべきである (SHOULD)。
        <!--
        If the OP is unable to identify the end user or the end user does not or 
        cannot approve the authentication request, the OP SHOULD send a negative 
        assertion to the Relying Party as an indirect response.
        -->
        </t>

        <t>
          "checkid_immediate" モードでの要求に対する応答として否定アサーションを受け取ったとき、RP は、"checkid_setup" モードを用いて、新たな認証要求を構築すべきである (SHOULD)。OpenID Authentication 1.1 との相違点に関する詳細は、<xref target="compat_mode" />で述べる。
        <!--
        When receiving a negative assertion in response to a "checkid_immediate" 
        mode request, Relying Parties SHOULD construct a new authentication 
        request using "checkid_setup" mode. Details about how this differs from 
        OpenID Authentication 1.1 can be found in Section 14.
        -->
        </t>

        <section title="即時要求への応答の場合">
          <t>
            要求が即時要求であった場合、エンドユーザが OP のページを介して対話し、識別用のクレデンシャルと要求に対するの承諾を送信する機会はない。即時要求への否定アサーションは、以下のフォームとする。
          <!--
          If the request was an immediate request, there is no chance for the end 
          user to interact with pages on the OP to provide identifying credentials 
          or approval of a request. A negative assertion of an immediate request 
          takes the following form:
          -->
            <list style='symbols'>
              <t>
                openid.ns
                <list style='empty'>
                  <t>
                    <xref target="http_encoding" />で指定した通り。
                  <!--
                  As specified in Section 4.1.2.
                  -->
                  </t>
                </list>
              </t>
              <t>
                openid.mode
                <list style='empty'>
                  <t>値： "setup_needed"
                  <!--
                  Value: "setup_needed"
                  -->
                  </t>
                </list>
              </t>
            </list>
          </t>
        </section>

        <section title="即時要求ではない要求への応答の場合">
          <t>
            OP がエンドユーザに対してページを表示し、エンドユーザのクレデンシャルを要求してもよいことから、即時要求ではない要求への否定応答は最終的なものとなる。この場合の否定応答は、以下のフォームとする。
          <!--
          Since the OP may display pages to the end user and request credentials 
          from the end user, a negative response to a request that is not 
          immediate is definitive. It takes the following form:
          -->
            <list style='symbols'>
              <t>
                openid.ns
                <list style='empty'>
                  <t>
                    <xref target="http_encoding" />で指定した通り。
                  <!--
                  As specified in Section 4.1.2.
                  -->
                  </t>
                </list>
              </t>
              <t>
                openid.mode
                <list style='empty'>
                  <t>
                    値： "cancel"
                  <!--
                  Value: "cancel"
                  -->
                  </t>
                </list>
              </t>
            </list>
          </t>

          <t>
            ユーザが認証要求の完了を望まない場合、あるいは認証要求を完了できない場合、OpenID の認証プロセスが異常終了し、キャンセルモードの応答を RP が取得できないことが多い (継続する代わりに、エンドユーザは終了したり、ユーザエージェントの「戻る」ボタンを押したりするかもしれない)。RP が "cancel" 応答を受け取った場合、認証は失敗したことを意味し、RP はそのエンドユーザを認証されなかったものとして扱わなければならない (MUST)。
          <!--
          Often, if the user does not wish to or cannot complete the authentication 
          request, the OpenID authentication process will be aborted and the Relying 
          Party will not get a cancel mode response (the end user may quit or press 
          the back button in their User-Agent instead of continuing). If a RP receives 
          the "cancel" response, authentication was unsuccessful and the RP MUST treat 
          the end user as non-authenticated.
          -->
          </t>
        </section>
      </section>
    </section>

    <section title="アサーションの検証" anchor="verification">
      <t>
        RP が肯定アサーションを受け取ったときには、そのアサーションを受け入れる前に、以下の値について検証しなければならない (MUST)。
          <!--
          When the Relying Party receives a positive assertion, it MUST verify 
          the following before accepting the assertion:
          -->

        <list style="symbols">
          <t>
            "openid.return_to" が現在の要求の URL と一致する (<xref target="verify_return_to" />)
          <!--
          The value of "openid.return_to" matches the URL of the current request (Section 11.1)
          -->
          </t>
          <t>
            ディスカバリによって得られた情報がアサーションの情報と一致する (<xref target="verify_disco" />)
          <!--
          Discovered information matches the information in the assertion (Section 11.2)
          -->
          </t>
          <t>
            "openid.response_nonce" について、当該 OP から、これまでに同じ値のアサーションを受け入れたことがない (<xref target="verify_nonce" />)
          <!--
          An assertion has not yet been accepted from this OP with the same value for 
          "openid.response_nonce" (Section 11.3)
          -->
          </t>
          <t>
            アサーションの署名が有効で、署名が必要な全てのフィールドに署名がされている (<xref target="verifying_signatures" />)
          <!--
          The signature on the assertion is valid and all fields that are required to 
          be signed are signed (Section 11.4)
          -->
          </t>
        </list>

        上記４つの条件が全て満たされていれば、アサーションが検証されたことになる。アサーションに主張識別子が含まれている場合は、その識別子について、ユーザの認証が済んだことになる。
        <!--
        If all four of these conditions are met, assertion is now verified. 
        If the assertion contained a Claimed Identifier, the user is now 
        authenticated with that identifier.
        -->
      </t>

      <section title="戻り URL の検証" anchor="verify_return_to">
        <t>
          "openid.return_to" URL がこのアサーションを処理している URL と一致していることを検証するためには、
        <!--
        To verify that the "openid.return_to" URL matches the URL that is 
        processing this assertion:
        -->
          <list style="symbols">
            <t>
              URL のスキーム、オーソリティ、パスが、ふたつの URL の間で同じでなければならない (MUST)。
            <!--
            The URL scheme, authority, and path MUST be the same between the two URLs.
            -->
            </t>
            <t>
              "openid.return_to" URL のクエリ値は、どのパラメータも、RP が受け取った HTTP 要求の URL に同じ値がなければならない。
            <!--
            Any query parameters that are present in the "openid.return_to" URL MUST 
            also be present with the same values in the URL of the HTTP request the 
            RP received.
            -->
            </t>
          </list>
        </t>
      </section>

      <section title="ディスカバリによって得られた情報の検証" anchor="verify_disco">
        <t>
          アサーションの中の主張識別子が URL で、フラグメントを含む場合、ディスカバリによって得られた情報を検証するために、そのフラグメント部分およびフラグメントの区切り文字 "#" を用いてはならない (MUST NOT)。
        <!--
        If the Claimed Identifier in the assertion is a URL and contains a fragment, 
        the fragment part and the fragment delimiter character "#" MUST NOT be used 
        for the purposes of verifying the discovered information.
        -->
        </t>

        <t>
          主張識別子がアサーションに含まれている場合、その主張識別子は RP が事前にディスカバリによって取得したものでなければならない (MUST)。また、アサーションの中の情報はディスカバリによって得られた情報の中に存在していなければならない (MUST)。主張識別子は OP 識別子であってはならない (MUST NOT)。
        <!--
        If the Claimed Identifier is included in the assertion, it MUST have been 
        discovered by the Relying Party and the information in the assertion MUST 
        be present in the discovered information. The Claimed Identifier MUST NOT 
        be an OP Identifier.
        -->
        </t>

        <t>
          RP がその時点までに主張識別子をディスカバリによって取得していない場合 (要求中の "openid.identity" が "http://specs.openid.net/auth/2.0/identifier_select"または異なる識別子であった場合、もしくは、OP が一方的な肯定アサーションを送ろうとしている場合)、RP は応答の中の主張識別子に関するディスカバリを実行し、その主張識別子に関するアサーションを行なう権限を OP が有しているかどうかを確認しなければならない (MUST)。
        <!--
        If the Claimed Identifier was not previously discovered by the Relying Party
        (the "openid.identity" in the request was 
        "http://specs.openid.net/auth/2.0/identifier_select" or a different Identifier, 
        or if the OP is sending an unsolicited positive assertion), the Relying Party 
        MUST perform discovery on the Claimed Identifier in the response to make sure 
        that the OP is authorized to make assertions about the Claimed Identifier.
        -->
        </t>

        <t>
          応答の中に主張識別子がない場合、アサーションは識別子に関するものではない。RP は、ユーザを識別するために、現在の OpenID 認証トランザクションに関連するユーザ入力識別子を用いてはならない (MUST NOT)。しかし、アサーションの中の拡張仕様情報は用いてもよい (MAY)。
        <!--
        If no Claimed Identifier is present in the response, the assertion is not about 
        an identifier and the RP MUST NOT use the User-supplied Identifier associated 
        with the current OpenID authentication transaction to identify the user. 
        Extension information in the assertion MAY still be used.
        -->
        </t>

        <texttable title="Discovered Information to Authentication Response Mapping">
          <ttcol align='left'>ディスカバリによって得られた値</ttcol>
          <ttcol align='left'> 応答フィールド</ttcol>

          <c>主張識別子</c>
          <c>openid.claimed_id</c>

          <c>OPローカル識別子</c>
          <c>openid.identity</c>

          <c>OPエンドポイントURL</c>
          <c>openid.op_endpoint</c>

          <c>プロトコルバージョン</c>
          <c>openid.ns</c>
          <postamble>
            この表は、<xref target="discovered_info">ディスカバリによって得られた情報</xref>の <xref target="positive_assertions">OpenID Authentication 2.0 "id_res" 応答</xref>へのマッピング (対応づけ) を示している。
          <!--
            This table shows the mapping of <xref
            target="discovered_info">discovered information</xref>
            into fields in the <xref
            target="positive_assertions">OpenID Authentication 2.0
            "id_res" response</xref>
          -->
          </postamble>
        </texttable>

        <t>
          XRDS 文書を生成するディスカバリの仕組みを使用する場合、いずれかの &lt;xrd:Service&gt; エレメントの中に、プロトコルバージョン、OPエンドポイントURL および OP ローカル識別子 (主張識別子と異なる場合) が記されていなければならない (MUST)。その &lt;xrd:Service&gt; エレメントの中に使用されないフィールドがあってもよい (MAY)。
        <!--
        If using a discovery mechanism that yields an XRDS document, the protocol 
        version, OP Endpoint URL and the OP-Local Identifier (if different than the 
        Claimed Identifier) MUST be present in one <xrd:Service> element. There MAY 
        be unused fields in that <xrd:Service> element.
        -->
        </t>

        <figure>
          <preamble>参考例</preamble>
          <!-- Non-normative example: -->
          <artwork><![CDATA[
<Service xmlns="xri://$xrd*($v*2.0)">
  <Type>http://specs.openid.net/auth/2.0/signon</Type>
  <URI>http://provider.example.com/openid</URI>
  <URI>https://provider.example.com/openid</URI>
</Service>
]]></artwork>
          <postamble>
            この XRDS 断片の例では、&lt;xrd:Service&gt; エレメントにふたつの &lt;xrd:URI&gt; エレメントがあり、<xref target="discovered_info" /> の通り OP エンドポイント URL へと対応づけられている。アサーションの中の "openid.op_endpoint" の値がふたつのうちのいずれかであれば、そのフィールドとこの &lt;xrd:Service&gt; エレメントとが一致する。もう一方の &lt;xrd:URI&gt; エレメントは使われない。
          <!--
          In this example XRDS snippet, the <xrd:Service> element has two <xrd:URI> 
          elements, which map to OP Endpoint URLs as per Section 7.3.1. If an assertion 
          has either value for "openid.op_endpoint", then that field matches this 
          <xrd:Service> element. The other <xrd:URI> element is unused.
          -->
          </postamble>
        </figure>

      </section>

      <section title="ノンスのチェック" anchor="verify_nonce">
        <t>
          リプレイアタックを阻止するため、署名のチェックを行なうエージェントは、肯定アサーションの中に含まれるノンス値の履歴を辿り、同一の OP エンドポイント URL について、同じ値を二度以上決して受け入れてはならない。
        <!--
        To prevent replay attacks, the agent checking the signature keeps track of 
        the nonce values included in positive assertions and never accepts the same 
        value more than once for the same OP Endpoint URL.
        -->
        </t>
        <t>
          <list style="symbols">
            <t>
              "check_authentication" を用いるに当たり、OP は、要求への成功時の応答の "openid.response_nonce" に、同一の値を二度以上用いてはならない (MUST NOT)。
            <!--
            When using "check_authentication", the OP MUST NOT issue more than one 
            successful response to a request with the same value for "openid.response_nonce".
            -->
            </t>
            <t>
              RP がアサーションの署名をチェックするに当たり、RP は、同じ OP エンドポイント URL から "openid.response_nonce" の値が同一のアサーションを過去に受け入れていないことを保証すべきである (SHOULD)。
            <!--
            When the Relying Party checks the signature on an assertion, the Relying Party 
            SHOULD ensure that an assertion has not yet been accepted with the same value 
            for "openid.response_nonce" from the same OP Endpoint URL.
            -->
            </t>
          </list>
        </t>
        <t>
          タイムスタンプを利用して、現在時刻との時間差が大きすぎる応答を拒否してもよい (MAY)。そのとき、攻撃を避ける上でノンスの保存が必要な時間は制限する。有効期間については、本仕様の対象範囲外である。有効期間が長いほど、より多くのノンスを、より長時間保存する必要がある。有効期間を短くすると、クロック・スキューやトランザクション時間が原因で誤って拒否してしまう可能性が高まる。
        <!--
        The time-stamp MAY be used to reject responses that are too far away from the 
        current time, limiting the amount of time that nonces must be stored to prevent 
        attacks. The acceptable range is out of the scope of this specification. 
        A larger range requires storing more nonces for a longer time. A shorter range 
        increases the chance that clock-skew and transaction time will cause a spurious 
        rejection.
        -->
        </t>
      </section>

      <section title="署名の検証"
               anchor="verifying_signatures">
        <t>
          アサーションで指定されるアソシエーションハンドルに紐付くアソシエーションを RP が保存した場合、RP は、アサーション自体の署名をチェックしなければならない (MUST)。アソシエーションを保存していない場合、RP は、OP が<xref target="check_auth">直接検証</xref>を通じて署名を検証するように要求しなければならない (MUST)。
        <!--
        If the Relying Party has stored an association with the association handle 
        specified in the assertion, it MUST check the signature on the assertion 
        itself. If it does not have an association stored, it MUST request that the 
        OP verify the signature via Direct Verification.
        -->
        </t>

        <section title="アソシエーションによる検証" toc="exclude">
          <t>
            RP は署名を生成する際に OP が従うのと同じ手順に従い、その後、応答の中の署名を生成された署名と比較する。署名が一致しなければ、アサーションは無効である。
          <!--
          The Relying Party follows the same procedure that the OP followed in 
          generating the signature, and then compares the signature in the response 
          to the signature it generated. If the signatures do not match, the assertion 
          is invalid.
          -->
          </t>

          <t>
            認証要求に OP 、RP 間のアソシエーションのアソシエーションハンドルが含まれているが、OP がそのアソシエーションハンドルをもはや使用したくない場合 (例えば、有効期限が既に切れている、秘密鍵が漏えいしてしまったなどの理由による場合)、<xref target="check_auth" /> で指定する通り、OP は、OP との直接検証が必要な応答を送ることになる。この場合、OP は、RP から受け取った元の要求に含まれていたアソシエーションハンドルを "openid.invalidate_handle" の値に設定して、そのフィールドを含める。
          <!--
          If an authentication request included an association handle for an association 
          between the OP and the Relying party, and the OP no longer wishes to use that 
          handle (because it has expired or the secret has been compromised, for instance), 
          the OP will send a response that must be verified directly with the OP, as specified 
          in Section 11.4.2. In that instance, the OP will include the field 
          "openid.invalidate_handle" set to the association handle that the Relying Party 
          included with the original request.
          -->
          </t>
        </section>

        <section title="OpenID プロバイダを通じた直接検証"
                 toc="exclude" anchor="check_auth">
          <t>
            RP が OP に署名検証を行なわせたいときは、OP に<xref target="direct_request">直接要求</xref>を送る。OP は、署名検証のために、<xref target="positive_assertions">肯定アサーション</xref>発行時に生成された専用のアソシエーションを用いる。
          <!--
            To have the signature verification performed by the OP,
            the Relying Party sends a <xref target="direct_request">
            direct request</xref> to the OP. To verify the signature,
            the OP uses a private association that was generated when
            it issued the <xref target="positive_assertions">
            positive assertion</xref>.
          -->
          </t>

          <section title='要求パラメータ' toc="exclude">
            <t>
              <list style='symbols'>
                <t>
                  openid.mode
                  <list style='empty'>
                    <t>値： "check_authentication"</t>
                    <!-- Value: "check_authentication" -->
                   </list>
                </t>

                <t>
                  認証応答の全てのフィールドをそのままコピー、ただし "openid.mode" を除く。
                <!--
                Exact copies of all fields from the authentication response, except 
                for "openid.mode".
                -->
                </t>
              </list>
            </t>

            <t>
              署名検証のために OP は、専用のアソシエーションを用いなければならない (MUST)。また、共有鍵を有するアソシエーションを用いてはならない (MUST NOT)。共有されているアソシエーションのハンドルが検証要求に含まれている場合は、RP がもはや秘密共有鍵を知らない、あるいは、このアソシエーションが RP 以外のエンティティ (例えば、攻撃者) と OP との間で確立してしまっていることを意味している。
              <!--
              For verifying signatures an OP MUST only use private associations and MUST 
              NOT use associations that have shared keys. If the verification request 
              contains a handle for a shared association, it means the Relying Party no 
              longer knows the shared secret, or an entity other than 
              the RP (e.g. an attacker) has established this association with the OP.
              -->
            </t>

            <t>
              リプレイアタックを阻止するため、OP は、過去に発行した認証応答のそれぞれについて、検証応答を二度以上発行してはならない (MUST NOT)。"openid.response_nonce" の値で、認証応答およびそれに対応する検証要求を識別してもよい。
            <!--
            To prevent replay attacks, the OP MUST NOT issue more than one verification 
            response for each authentication response it had previously issued. 
            An authentication response and its matching verification request may be 
            identified by their "openid.response_nonce" values.
            -->
            </t>

          </section>

          <section title='応答パラメータ' toc="exclude">
            <t>
              <list style='symbols'>
                <t>
                  ns
                  <list style='empty'>
                    <t>
                      <xref target="direct_response" />Section 5.1.2 で指定した通り。
                    <!--
                    As specified in Section 5.1.2.
                    -->
                    </t>
                  </list>
                </t>

                <t>
                  is_valid
                  <list style='empty'>
                    <t>
                      値： "true" または "false"。検証要求の署名が有効かどうかを示す。
                    <!--
                    Value: "true" or "false"; asserts whether the signature of the 
                    verification request is valid.
                    -->
                    </t>
                  </list>
                </t>

                <t>
                  invalidate_handle
                  <list style='empty'>
                    <t>
                      値： (オプション)  OP が無効であることを確認した場合に、検証要求の中で送る "invalidate_handle" の値。
                    <!--
                    Value: (optional) The "invalidate_handle" value sent in the verification request, 
                    if the OP confirms it is invalid.
                    -->
                    </t>
                    <t>
                      説明： "true" に設定された "is_valid" を含む検証応答の中に、このパラメータが存在する場合、RP は、保存しているアソシエーションの中から対応するものを削除すべきである (SHOULD)。また、これ以降、このハンドルを含む認証要求を送るべきではない (SHOULD NOT)。
                    <!--
                    Description: If present in a verification response with "is_valid" set to "true", 
                    the Relying Party SHOULD remove the corresponding association from its store and 
                    SHOULD NOT send further authentication requests with this handle.
                    -->
                    </t>
                    <t>
                      注：認証応答に "invalidate_handle" パラメータを追加することによって、攻撃者がアソシエーションを自由自在に無効化してしまうのを防止するためには、こうした二段階のアソシエーション無効化プロセスが必要である。
                    <!--
                    Note: This two-step process for invalidating associations is necessary to prevent 
                    an attacker from invalidating an association at will by adding "invalidate_handle" 
                    parameters to an authentication response.
                    -->
                    </t>
                  </list>
                </t>
              </list>
            </t>
          </section>
        </section>
      </section>

      <section title="エンドユーザの識別" anchor="identifying">
        <t>
          RP は、成功時の認証応答における主張識別子を、ローカルストレージ内のユーザ情報へのキーとして用いるべきである (SHOULD)。また、主張識別子をユーザが管理している識別子として用いてもよい (MAY)。URL 識別子を表示するときは、フラグメントを省略してもよい (MAY)。
        <!--
        The Claimed Identifier in a successful authentication response SHOULD be used 
        by the Relying Party as a key for local storage of information about the user. 
        The Claimed Identifier MAY be used as a user-visible Identifier. When displaying 
        URL Identifiers, the fragment MAY be omitted.
        -->
        </t>

        <section title="識別子のリサイクル" anchor="identifier_recycling">
          <t>
            多数のユーザを抱える OP は、必要に応じ、フラグメントを用いて URL 識別子をリサイクルすることができる。新たなエンドユーザに対して URL 識別子の再割り当てを行なうに当り、OP は、新規かつ固有のフラグメント部分を生成すべきである。
          <!--
          OpenID Providers with large user bases can use fragments to recycle URL 
          Identifiers if it is so desired. When reassigning a URL Identifier to 
          a new end user OPs should generate a new, unique fragment part.
          -->
          </t>
          <t>
            フラグメント部分を含む URL 全体は、肯定アサーションにおいて主張識別子を構成する要素であるため、RP は、フラグメントを除く URL の現在の所有者と以前の所有者を区別することになる。
          <!--
          The full URL with the fragment part constitutes the Claimed Identifier 
          in positive assertions, therefore Relying Parties will distinguish between 
          the current and previous owners of the fragment-less URL.
          -->
          </t>
          <t>
            この仕組みを用いると、(恐らく短く、記憶しやすい) リサイクルされたフラグメントのない URL 識別子を、エンドユーザがログイン時に使用したり、RP が表示するために用いたりすることができるようになる。
          <!--
          This mechanism allows the (presumably short, memorable) recycled URL Identifiers 
          without the fragment to be used by end users at login time and by Relying Parties 
          for display purposes.
          -->
          </t>
        </section>

        <section title="HTTP および HTTPS URL 識別子" anchor="http_s_identifiers">
          <t>
            RP は、異なるスキームを持つ URL 識別子同士を区別しなければならない (MUST)。エンドユーザの入力を URL に変換するときは、その URL は HTTP URL となる。同一のエンドユーザがスキーム以外は同一の URL を管理しており、識別子が HTTPS URL であることが望ましい場合、HTTP URL から HTTPS URL へのリダイレクトを発行することが推奨される (RECOMMENDED)。HTTP URL と HTTPS URL とは等価ではなく、使用される識別子は、リダイレクト後のURLであるため、このスキームを用いる場合には、セキュリティの低下は懸念されない。たとえ攻撃者が HTTP URL をコントロールできるようになったとしても、HTTPS URL には何の影響も与えないだろう。HTTP URL は、ディスカバリプロセスを開始させる以外には識別子として用いられないからである。
          <!--
          Relying Parties MUST differentiate between URL Identifiers that have different 
          schemes. When end user input is processed into a URL, it is processed into 
          a HTTP URL. If the same end user controls the same URL, differing only by scheme, 
          and it is desired that the Identifier be the HTTPS URL, it is RECOMMENDED that 
          a redirect be issued from the HTTP URL to the HTTPS URL. Because the HTTP and 
          HTTPS URLs are not equivalent and the Identifier that is used is the URL after 
          following redirects, there is no foreseen reduction in security when using this 
          scheme. If an attacker could gain control of the HTTP URL, it would have no 
          effect on the HTTPS URL, since the HTTP URL is not ever used as an Identifier 
          except to initiate the discovery process.
          -->
          </t>
        </section>
      </section>
    </section>

    <section title="拡張仕様" anchor="extensions">
    <!-- section title="Extensions" anchor="extensions" -->
      <t>
        OpenID 認証の拡張仕様は、認証要求および応答の“上に乗る”プロトコルである。拡張仕様は、認証要求や応答に関するその他の情報を提供したり、認証応答の対象に関するその他の情報を提供したりする際に役立つ。
        <!--
        An Extension to OpenID Authentication is a protocol that
        "piggybacks" on the authentication request and response. Extensions
        are useful for providing extra information about an
        authentication request or response as well as providing extra
        information about the subject of the authentication response.
        -->
      </t>

      <t>
        OpenID の拡張仕様は、サービスタイプ URI で識別される。サービスタイプ URI は、主張識別子と関連する XRDS 文書内で、OpenID &lt;xrd:Service&gt; エレメントの &lt;xrd:Type&gt; エレメントの値として用いてもよい (MAY)。サービスタイプ URI は、拡張仕様を含むメッセージの中で、キーと値のペアを関連づけるためにも用いられる。
        <!--
        OpenID extensions are identified by a Type URI. The Type URI
        MAY be used as the value of an &lt;xrd:Type&gt; element of an
        OpenID &lt;xrd:Service&gt; element in an XRDS document
        associated with a Claimed Identifier.  The Type URI is also
        used to associate key-value pairs in messages with the extension.
        -->
      </t>

      <t>
        メッセージの中で拡張仕様を用いてキーと値とを関連づけるためには、キーを サービスタイプ URI と関連づけなければならない (MUST)。キーとサービスタイプ URI とを関連づけるためには、頭に "openid.ns." を付加したキーを追加するとともに、値がサービスタイプ URI のエイリアステキストを後ろに追加することによって、エイリアスを確定する。エイリアスが確定すると、メッセージの中のペアのうち、"openid." で始まり、その後にエイリアステキストが続き、さらにその後ろにピリオドもしくはキーの末尾が続くようなキーを有するペアは全て、拡張仕様と関連づけられる。この仕組みは、XML名前空間と似ている。
        <!-- XXX: openid. only for indirect messages -->
        <!--
        To associate keys and values in a message with an extension,
        the key MUST be associated with the Type URI. To associate
        keys with a Type URI, establish an alias by adding a key
        prefixed with "openid.ns." and ending with the alias text
        whose value is the Type URI. Once an alias has been
        established, all pairs in the message whose keys start with
        "openid." followed by the alias text, followed by a period or
        the end of the key are associated with that extension.
        This mechanism is similar to the XML namespaces.
        -->
      </t>

      <t>
        名前空間のエイリアスは、ピリオドを含んでいてはならない (MUST NOT)。また、同じメッセージの中の他の名前空間のエイリアスと同じであってはならない (MUST NOT)。さらに、名前空間のエイリアスは、以下のリストに示す許可されていないエイリアスのひとつであってはならない (MUST NOT)。
        <!--
        A namespace alias MUST NOT contain a period and MUST NOT be
        the same as another namespace alias in the same message. A
        namespace alias also MUST NOT be in the following list of
        disallowed aliases:
        -->

        <list style="symbols">
          <t>assoc_handle</t>
          <t>assoc_type</t>
          <t>claimed_id</t>
          <t>contact</t>
          <t>delegate</t>
          <t>dh_consumer_public</t>
          <t>dh_gen</t>
          <t>dh_modulus</t>
          <t>error</t>
          <t>identity</t>
          <t>invalidate_handle</t>
          <t>mode</t>
          <t>ns</t>
          <t>op_endpoint</t>
          <t>openid</t>
          <t>realm</t>
          <t>reference</t>
          <t>response_nonce</t>
          <t>return_to</t>
          <t>server</t>
          <t>session_type</t>
          <t>sig</t>
          <t>signed</t>
          <t>trust_root</t>
        </list>

        同じメッセージの中で、ある名前空間にひとつ以上のエイリアスを割り当ててはならない (MUST NOT)。メッセージが他のメッセージへの応答の場合、その応答は、同じ名前空間を参照するのに異なるエイリアスを用いてもよい (MAY)。
        <!--
        A namespace MUST NOT be assigned more than one alias in the
        same message. If a message is a response to another message,
        the response MAY use a different alias to refer to the same
        namespace.
        -->
      </t>

      <t>参考例：<!-- Non-normative example: --></t>
      <t>
        拡張仕様のサービスタイプ URI は、"&lt;http://example.com/ext/1.0&gt;" である。
        <!--
        An extension's type URI is "&lt;http://example.com/ext/1.0&gt;".
        -->

      <list style="empty">
        <t>openid.ns.x=http://example.com/ext/1.0</t>
        <t>openid.x=example</t>
        <t>openid.x.foo=bar</t>
        <t>openid.xx=notx</t>
      </list>

        この例において、"openid.x" と "openid.x.foo" という鍵は拡張仕様と関連づけられている。"openid.xx" という鍵は関連づけられていない。
        <!--
        In this example, the keys "openid.x" and "openid.x.foo" are
        associated with the extension; the "openid.xx" key is not.
        -->
      </t>

      <t>
        拡張仕様は、同じ名前を有する複数のパラメータを定義してはならない (MUST NOT)。同じパラメータ名について複数の値を送る必要がある拡張仕様は、そのための独自の規則を定義しなければならない。
        <!--
        Extensions MUST NOT define multiple parameters with the same name.
        Extensions that need to send multiple values for the same parameter
        name must define their own conventions for doing so.
        -->
      </t>
    </section>

    <section title="OpenID リライングパーティーのディスカバリ" anchor="rp_discovery">
    <!-- section title="Discovering OpenID Relying Parties" anchor="rp_discovery" -->
      <t>
        RP のディスカバリによって、ソフトウェアエージェントは、OpenID をサポートしているサイトを発見することができる。OpenID 要求の中の return_to URL が、指定されたレルムに対するOpenID RP のエンドポイントであることを、OpenID プロバイダが自動的に検証することも可能である。
        <!--
        Relying Party discovery allows for software agents to discover
        sites that support OpenID. It also allows OpenID providers to
        automatically verify that a return_to URL in an OpenID request
        is an OpenID relying party endpoint for the specified realm.
        -->
      </t>

      <t>
        RP は、Yadis プロトコルを使用して、有効な return_to URL を公開すべきである (SHOULD)。RP は、この情報をどの URL で公開してもよい (MAY)。また、プロバイダが return_to URL を検証できるように、レルムの範囲内で公開すべきである (SHOULD)。
        <!--
        Relying Parties SHOULD use the Yadis protocol to publish their
        valid return_to URLs. The relying party MAY publish this
        information at any URL, and SHOULD publish it under the realm
        so that providers can verify return_to URLs.
        -->
      </t>

      <t>
        RP のディスカバリの XRDS 文書は、ひとつ以上の &lt;xrd:Service&gt; エレメントを含まなければならない (MUST)。
        <!--
        A Relying Party discovery XRDS document MUST contain one or more
        &lt;xrd:Service&gt; elements:
        -->

        <list style="symbols">
          <t>
            少なくともひとつの &lt;xrd:URI&gt; エレメントを含む。
            <!--
            Containing at least one &lt;xrd:URI&gt; element.
            -->
          </t>
          <t>
            全ての &lt;xrd:URI&gt; タグが OpenID 2.0 認証応答を受け入れる URL を含む。
            <!--
            Where all &lt;xrd:URI&gt; tags contain a URL that accepts
            OpenID 2.0 Authentication responses.
            -->
          </t>
          <t>
            内容が "http://specs.openid.net/auth/2.0/return_to" である &lt;xrd:Type&gt; タグを含む。
            <!--
            Containing a &lt;xrd:Type&gt; tag whose content is
            "http://specs.openid.net/auth/2.0/return_to".
            -->
          </t>
        </list>
      </t>

      <figure>
        <preamble>参考例：<!-- Non-normative example:--></preamble>
        <artwork><![CDATA[
<Service xmlns="xri://$xrd*($v*2.0)">
  <Type>http://specs.openid.net/auth/2.0/return_to</Type>
  <URI>http://consumer.example.com/return</URI>
</Service>
]]></artwork>
      </figure>
    </section>

    <section title="OpenID Authentication 1.1 との互換性"
             anchor="compat_mode">
    <!-- section title="OpenID Authentication 1.1 Compatibility"
             anchor="compat_mode" -->

      <t>
        このセクションでは、OpenID Authentication 1.1 RP および OP との連携方法について説明する。OpenID Authentication 2.0 の実装においては、セキュリティに関する考慮事項によって好ましくないとされない限り、OpenID Authentication 1.1 互換性をサポートすべきである (SHOULD)。
        <!--
        This section describes how to interact with OpenID
        Authentication 1.1 Relying Parties and OPs. OpenID
        Authentication 2.0 implementations SHOULD support OpenID
        Authentication 1.1 compatibility, unless security
        considerations make it undesirable.
        -->
      </t>

      <section title="OpenID Authentication 1.1 からの変更点" >
      <!-- section title="Changes from OpenID Authentication 1.1" -->
        <t>
          （参考）
          <!--
          (non-normative)
          -->
        </t>
        <t>
          本仕様は、Brad Fitzpatrick が記した OpenID 認証のオリジナルの仕様に基づいている。その仕様にはバージョン番号がなかったが OpenID 1.0 と呼ばれ、その後改訂されて OpenID 1.1 となった。本仕様で概要を示しているプロトコルは、改訂後の OpenID プロトコルと下位互換性を保つように意図されている。仕様の変更点の概要は、このセクションに記す通りである。
          <!--
          This specification is based on the original specification for
          OpenID Authentication as written by Brad Fitzpatrick. That
          specification did not have a version number, but was called
          OpenID 1.0, and then OpenID 1.1 when it was revised.  The
          protocol outlined in this specification is intended to be
          backwards-compatible with the revised OpenID protocol.  The
          changes to the specification are outlined in this section.
          -->
        </t>

        <section title="開始およびディスカバリに関わる更新">
        <!-- section title="Updated Initiation and Discovery" -->
          <t>
            <list style="symbols">
              <t>
                OP 識別子をサポート。この新たな種類のプロトコルフローは、エンドユーザ自身の識別子の代わりに OP 識別子を入力することによって開始される。このため、OP は、エンドユーザによる識別子の選択を支援できる。
                <!--
                Supports OP Identifiers. This new variation of the
                protocol flow is initiated by an end user entering an OP
                Identifier instead of their own Identifier.  This allows
                the OP to assist the end user in selecting an
                Identifier.
                -->
              </t>
              <t>
                識別子としての XRI の使用をサポート。エンドユーザ用の識別子、OP 用の識別子のどちらにも XRI を使用してよい。また XRI は、ひとつ以上の再割り当て可能な (reassignable) i-names から同義かつ永続的で、再割り当てが決して行われない正準化 ID へと自動的にマッピングする。
                <!--
                Supports the use of XRIs as Identifiers. XRIs may be
                used as Identifiers for both end users and OPs, and
                provide automatic mapping from one or more reassignable
                i-names to a synonymous persistent Canonical ID that
                will never be reassigned.
                -->
              </t>
              <t>
                URL を識別子として用いた場合、既存のウェブのインフラとの互換性を高めるために、識別子は <xref target='RFC3986' /> に示される指針に従って正規化される。
                <!--
                When URLs are used as Identifiers, they are normalized
                according to the guidelines in <xref target='RFC3986' />,
                for better compatibility with the existing Web infrastructure.
                -->
              </t>
              <t>
                ディスカバリでの Yadis プロトコルの使用。ひとつの識別子のために複数の OP を利用することができ、OP に不具合が生じたときのロードバランシングやフォールバックとして役立つ。さらに、サポートしている拡張仕様や他の関連サービスのディスカバリにも利用できる。
                <!--
                Uses the Yadis protocol for discovery. This allows for
                using multiple OPs for a single Identifier, for
                load-balancing and fallback in the case of OP
                failure. Additionally, it allows for discovery of
                supported extensions and other associated services.
                -->
              </t>
            </list>
          </t>
        </section>

        <section title="セキュリティ面での改善">
        <!-- section title="Security improvements" -->
          <t>
            OpenID 2.0 ではノンスがプロトコルの一部として組み込まれ、リプレイアタックへの防御策が内蔵されることになった。こうした防御策はこれまで、それぞれのライブラリまたはアプリケーションが仕様の外で実装していた。
            <!--
            A nonce is now part of the protocol for built-in protection
            against replay attacks, which was previously implemented
            out-of-band by each library or application.
            -->
          </t>
          <t>
            新たなアソシエーション形式である HMAC-SHA256 および新たなアソシエーションセッション形式である DH-SHA256 によって、認証アサーションにおける、より強力な署名が可能となった。
            <!--
            A new association type, HMAC-SHA256, and a new association
            session type, DH-SHA256, allow for stronger signatures on
            authentication assertions.
            -->
          </t>
          <t>
            <xref target="security_considerations">セキュリティに関する考慮事項のセクション</xref>を設け、プロトコルをエンドツーエンドで保護するために考慮している。
            <!--
            An actual <xref target="security_considerations">Security
            Considerations section</xref> which looks at protecting
            the protocol from end-to-end.
            -->
          </t>
        </section>

        <section title="拡張仕様">
        <!-- section title="Extensions" -->
          <t>
            OpenID 2.0 では、認証に加え、RPとOP間のデータ交換やその他の通信をサポートするための仕組みとして、拡張仕様が正式にサポートされた。拡張仕様は、任意の属性の交換に利用できるほか、RP に関する追加情報を認証要求の中に含めるといったプロトコルの拡張にも利用できる。
            <!--
            Extensions are now an officially supported mechanism to
            support data exchange and other Relying Party-OP
            communication along with the authentication
            exchange. Extensions allow for the exchange of arbitrary
            attributes, as well as for protocol extensions,
            such as the inclusion of additional information about the
            Relying Party in the authentication request.
            -->
          </t>
          <t>
            拡張機能は任意のデータを転送できるため、OpenID 2.0 では、認証メッセージの中への識別子の記述はオプションとなった。
            <!--
            Because extensions can transfer arbitrary data, the
            Identifier is now optional in authentication messages.
            -->
          </t>
        </section>
      </section>

      <section title="OpenID Authentication 1.1 互換性の実装">
      <!-- section title="Implementing OpenID Authentication 1.1 Compatibility" -->
        <t>
          OpenID Authentication 1.1 のメッセージは全て "openid.ns" パラメータが省略されているため、OpenID Authentication 1.1 endpoint から送信されたメッセージかどうかを RP が簡単に判断することができる。OpenID Authentication 1.1 がサポートしているのは HMAC-SHA1 のアソシエーションのみである。
          <!--
          All messages in OpenID Authentication 1.1 omit the
          "openid.ns" parameter, which is an easy way for an RP to
          determine if the message is from an OpenID Authentication
          1.1 endpoint. OpenID Authentication 1.1 supports only
          HMAC-SHA1 associations.
          -->
        </t>

        <t>
          OpenID Authentication 1.1 のエラー時の応答では、"contact" や "reference" を定義していなかった。OpenID Authentication 1.1 では、エラー時の応答への追加フィールドの追加が可能であった。デバッグに役立つことがあり、また互換性に影響を与えないことから、OpenID Authentication 1.1 を使用するときも、連絡先や参照先を送ることが推奨される (RECOMMENDED)。
          <!--
          Error responses in OpenID Authentication 1.1 did not define
          "contact" or "reference". OpenID Authentication 1.1 did
          allow for the addition of extra fields in error
          responses. It is RECOMMENDED for contact and reference to be
          sent even when using OpenID Authentication 1.1, since they
          may be useful for debugging and do not affect compatibility.
          -->
        </t>

        <section title="リライングパーティー">
        <!-- section title="Relying Parties" -->
          <t>
            <list style="symbols">
              <t>
                HTML ベースのディスカバリを実行したとき、OP エンドポイント URL のリンク関係は、"openid2.provider" よりも "openid.server" が優先して指し示される。また、エンドユーザの OP ローカル識別子のリンク関係は "openid2.local_id" よりも "openid.delegate" が優先して指し示される。これらに該当する場合、プロトコルバージョンは "http://openid.net/signon/1.1" である。HTML では、ひとつのリンクに対して複数のリンク関係を指定することができる。従って、もし OP が OpenID Authentication 1.1 と OpenID Authentication 2.0 の両方に対応していれば、同一の "rel" 属性に "openid2.provider" と "openid.server" の両方が記述されている可能性がある。
                <!--
                When HTML discovery is performed, the OP endpoint URL
                is marked by the link relationship "openid.server"
                rather than "openid2.provider". The end user's
                OP-Local Identifier is marked by the link relationship
                "openid.delegate" rather than "openid2.local_id".  The
                protocol version is in this case
                "http://openid.net/signon/1.1". HTML allows multiple
                link relationships to be specified for a single link,
                so if an OP provides both OpenID Authentication 1.1
                and OpenID Authentication 2.0, "openid2.provider" and
                "openid.server" may appear in the same "rel"
                attribute.
                -->
              </t>

              <t>
                XRDS ベースのディスカバリを実行したとき、エンドユーザの OP ローカル識別子は、OpenID &lt;xrd:Service&gt; エレメントの &lt;xrd:LocalID&gt; タグではなく、&lt;openid:Delegate&gt; タグに記述されている。現在実装されているディスカバリコードをサポートするため、&lt;xrd:Service&gt; エレメントに両方のタグを記述してもよい (MAY)。
                <!--
                When XRDS-based discovery is performed, the end user's
                OP-Local Identifier appears in the
                &lt;openid:Delegate&gt; tag of the OpenID
                &lt;xrd:Service&gt; element rather than in the
                &lt;xrd:LocalID&gt; tag. In order to support
                currently-deployed discovery code, both tags MAY
                appear in the &lt;xrd:Service&gt; element.
                -->
              </t>

              <t>
                RP は、Yadis が URL 識別子で成功した場合、XRDS 文書から OpenID Authentication 1.x サービスエレメントを抽出し、利用すべきである (SHOULD)。該当のサービスエレメントは、&lt;xrd:Type&gt; タグのテキスト内容が "http://openid.net/server/1.0" または "http://openid.net/server/1.1" であることから特定できる。前バージョンのプロトコルでは定められていないが、Yadis を通じて OpenID Authentication 1.x サービスを広く知らせる手法として、一般に受け入れられている。
                <!--
                Relying Parties SHOULD extract and use OpenID
                Authentication 1.x service elements from XRDS
                documents, if Yadis succeeds on an URL
                Identifier. Such service elements are identified by
                &lt;xrd:Type&gt; tags whose text contents are
                "http://openid.net/server/1.0" or
                "http://openid.net/server/1.1".  Although this is not
                specified in the previous version of the protocol, it
                is a generally accepted practice of advertising OpenID
                Authentication 1.x services through Yadis.
                -->
              </t>

              <t>
                OpenID Authentication 1.1 では、"openid.claimed_id" を定義していない。RP は、要求を行なうときに値を送ってもよい (MAY) が、認証応答の中に記述されている値に依存してはならない (MUST NOT)。OP ローカル識別子 ("openid.identity") と主張識別子とが異なっている場合、RP は、セッション状態に保持する等の方法で、OP ローカル識別子 のディスカバリ時にどの主張識別子を用いたのかを追跡しなければならない (MUST)。応答に主張識別子が記されることはないが、ユーザの識別子として主張識別子を用いなければならない (MUST)。
                <!--
                "openid.claimed_id" is not defined by OpenID
                Authentication 1.1. Relying Parties MAY send the value
                when making requests, but MUST NOT depend on the value
                being present in authentication responses. When the
                OP-Local Identifier ("openid.identity") is
                different from the Claimed Identifier, the Relying
                Party MUST keep track of what Claimed Identifier was
                used to discover the OP-Local Identifier, for
                example by keeping it in session state. Although the
                Claimed Identifier will not be present in the
                response, it MUST be used as the identifier for the
                user.
                -->
              </t>

              <t>
                <xref target="responding_to_authentication">認証要求時</xref>には、"openid.identity" を送らなければならない (MUST)。
                <!--
                "openid.identity" MUST be sent in a <xref
                    target="responding_to_authentication">authentication
                request</xref>.
                -->
              </t>

              <t>
                "no-encryption" アソシエーション要求では、RP は、ブランクの session_type パラメータを送らなければならない (MUST)。
                <!--
                Relying Parties MUST send a blank session_type parameter
                in "no-encryption" association requests.
                -->
              </t>

              <t>
                OpenID Authentication 1.1 では、"openid.session_type" パラメータの内容がブランク、または、当該パラメータがない場合、"no-encryption" アソシエーションセッション形式 であることを意味する。RP は、"openid.session_type" の値を "no-encryption" に設定して要求を送ってはならない (MUST NOT)。
                <!--
                In OpenID Authentication 1.1, the "no-encryption"
                association session type is represented by a blank or
                missing "openid.session_type" parameter. Relying
                Parties MUST NOT send requests with
                "openid.session_type" set to "no-encryption".
                -->
              </t>

              <t>
                <xref target="requesting_authentication">認証要求</xref>では、OpenID Authentication 1.1 が OP 識別子の使用をサポートしていないので、"openid.identity"パラメータの値を特殊値 "http://specs.openid.net/auth/2.0/identifier_select" にすべきではない (SHOULD NOT)。
                <!--
                In <xref
                target="requesting_authentication">authentication
                requests</xref>, the "openid.identity" parameter
                SHOULD NOT be the special value
                "http://specs.openid.net/auth/2.0/identifier_select",
                because OpenID Authentication 1.1 does not support the
                use of OP Identifiers.
                -->
              </t>

              <t>
                認証要求の中の "openid.realm" パラメータは、以前は "openid.trust_root" と呼ばれていた。構文規則や意味は全く同じである。
                <!--
                The "openid.realm" parameter in authentication requests
                was known as "openid.trust_root". The syntax and meaning
                are identical.
                -->
              </t>

              <t>
                "checkid_immediate" モードでの認証要求に対して、否定アサーションで応答するときは、"user_setup_url" パラメータを戻さなければならない (MUST)。このパラメータは、エンドユーザが要求を完了するために訪れるかもしれない URL を示している。OP は、エンドユーザをこの URL にリダイレクトしてもよい (MAY)。また、エンドユーザに、この URL を指し示すリンクを提供してもよい (MAY)。
                <!--
                When responding with a negative assertion to a
                "checkid_immediate" mode authentication request, the
                "user_setup_url" parameter MUST be returned. This is a
                URL that the end user may visit to complete the
                request. The RP MAY redirect the end user to
                this URL, or provide the end user with a link that
                points to this URL.
                -->
              </t>

              <t>
                RP は、"openid.response_nonce" パラメータがない<xref target="positive_assertions">認証応答</xref>を受け入れなければならない (MUST)。リプレイアタックを防ぐための手段を実装すべきである (SHOULD)。
                <!--
                The Relying Party MUST accept an <xref
                target="positive_assertions">authentication
                response</xref> that is missing the
                "openid.response_nonce" parameter.  It SHOULD
                implement a method for preventing replay attacks.
                -->
              </t>

              <t>
                RP は、"openid.op_endpoint" パラメータがない<xref target="positive_assertions">認証応答</xref>を受け入れなければならない (MUST)。
                <!--
                Relying Parties MUST accept
                <xref target="positive_assertions">authentication responses
                </xref> that are missing the "openid.op_endpoint" parameter.
                -->
              </t>
            </list>
          </t>
        </section>

        <section title="OpenID プロバイダ">
        <!-- section title="OpenID Providers" -->
          <t>
            <list style="symbols">
              <t>
                <xref target="positive_assertions">肯定の認証アサーション</xref>の中に、"openid.identity" を含めて送らなければならない (MUST)。
                <!--
                "openid.identity" MUST be sent in a <xref
                    target="positive_assertions">positive authentication
                assertion</xref>.
                -->
              </t>

              <t>
                OpenID Authentication 1.1 では、"openid.session_type" パラメータの内容がブランク、または、当該パラメータがない場合、"no-encryption" アソシエーションセッション形式 であることを意味する。OP は、"openid.session_type" の値を "no-encryption" に設定して応答を送ってはならない (MUST NOT)。
                <!--
                In OpenID Authentication 1.1, the "no-encryption"
                association session type is represented by a blank or
                missing "openid.session_type" parameter.  OPs MUST NOT
                send responses with "openid.session_type" set to
                "no-encryption".
                -->
              </t>

              <t>
                OP は、どのアソシエーション要求に対しても、成功時の "no-encryption" 応答を返すことを選択してもよい (MAY)。前述の通り、"openid.session_type" パラメータは、その内容をブランクとするか、パラメータ自体を省略するかしなければならない (MUST)。
                <!--
                OPs MAY choose to return a successful "no-encryption"
                response to any association request. As above, the
                "openid.session_type" parameter MUST be blank or
                omitted from the response.
                -->
              </t>

              <t>
                OP は、assoc_type でないパラメータが記されたアソシエーション要求を受け入れなければならない (MUST)。また、それらのアソシエーション要求は、HMAC-SHA1 タイプであると見なさなければならない (MUST)。
                <!--
                OPs MUST accept association requests with no assoc_type
                parameter, and assume them to be of type HMAC-SHA1.
                -->
              </t>

              <t>
                アソシエーション構築が失敗したときは、直接のエラーメッセージ、あるいは "noencryption" の肯定アソシエーションで応答してもよい (MAY)。
                <!--
                Unsuccessful association attempts MAY be responded with
                direct error messages or with "no-encryption" positive
                association responses.
                -->
              </t>

              <t>
                認証要求の中の "openid.realm" パラメータは、以前は "openid.trust_root" と呼ばれていた。構文規則や意味は全く同じである。
                <!--
                The "openid.realm" parameter in authentication requests
                was known as "openid.trust_root". The syntax and meaning
                are identical.
                -->
              </t>

              <t>
                "checkid_immediate" モードでの認証要求に対して、否定アサーションで応答するときは、"user_setup_url" パラメータを戻さなければならない (MUST)。このパラメータは、エンドユーザが要求を完了するために訪れるかもしれない URL を示している。RP は、エンドユーザをこの URL にリダイレクトしてもよい (MAY)。また、エンドユーザに、この URL を指し示すリンクを提供してもよい (MAY)。
                <!--
                When responding with a negative assertion to a
                "checkid_immediate" mode authentication request, the
                "user_setup_url" parameter MUST be returned. This is a URL
                that the end user may visit to complete the request. The
                Relying Party may redirect the end user to this URL, or
                provide the end user with a link that points to this
                URL.
                -->
              </t>

              <t>
                OP は、認証応答時に "openid.op_endpoint" パラメータを送ってはならない (MUST NOT)。その理由は、OpenID Authentication 1.1 プロトコルが当該パラメータを実装していないからである。
                <!--
                OPs MUST NOT send the "openid.op_endpoint" parameter in
                <xref target="positive_assertions">authentication responses
                </xref>, since it is not part of the OpenID Authentication
                1.1 protocol.
                -->
              </t>
            </list>
          </t>
        </section>
      </section>
    </section>

    <section title="セキュリティに関する考慮事項" anchor="security_considerations">
    <!-- section title="Security Considerations" anchor="security_considerations" -->
      <section title="アタック（攻撃）からの防御">
      <!-- section title="Preventing Attacks" -->
        <section title="盗聴攻撃"
                 anchor="preventing_eavesdropping">
        <!-- section title="Eavesdropping Attacks"
                 anchor="preventing_eavesdropping" -->
          <t>
            このプロトコルには、盗聴攻撃に対して脆弱な部分が一か所存在する。
            <!--
            There is one place in this protocol that is vulnerable
            to eavesdropping attacks.
            -->
            <list style="symbols">
              <t>
                ノンスのチェックが行なわれないと、盗聴者が成功時の認証アサーションを転送途中で入手して、再利用できてしまう。
                <!--
                If the nonce were not checked, an eavesdropper could also
                intercept a successful authentication assertion and re-use it.
                -->
              </t>
            </list>
          </t>

          <t>
            こうした攻撃は、トランスポート層での暗号化を用い、これらの接続を盗聴行為から防御することによって防ぐことができる。また TLS を利用しない場合でも、メッセージ検証を実行する途中でノンスをチェックすることによって防ぐことができる。その場合は、肯定の認証アサーションの再利用はできなくなる。
            <!--
            This attack can be prevented by using transport layer encryption
            for these connections to prevent eavesdropping. In addition,
            if not using TLS this attack can still be prevented by
            checking the nonce while performing message verification.
            When doing so, the positive authentication assertion cannot
            be re-used.
            -->
          </t>
        </section>

        <section title="中間者攻撃">
        <!-- section title="Man-in-the-Middle Attacks" -->
          <t>
            アソシエーションは、ディスカバリやアソシエーションセッション、<xref target="check_auth">直接検証</xref>の最中を除き、署名済みフィールドの中間者による改竄を防ぐ。秘密の共有鍵を知らずに署名済みフィールドを変更しようとすれば、MAC を解読する必要がある。現時点では、本プロトコルで用いられている MAC に関し、簡単に対処できる攻撃は判明していない。MAC によって提供される保護の質は 共有 MAC 鍵のランダムさに依存しており、推測できない値を用いることが重要となる。
            <!--
            Associations prevent tampering of signed fields by a man
            in the middle except during discovery, association
            sessions and <xref target="check_auth">Direct
            Verification</xref>. Altering signed fields without the
            shared secret requires breaking the MAC. Currently no
            tractable attack is known on the MACs used in this
            protocol. The quality of the protection provided by the
            MAC depends on the randomness of the shared MAC key, so it
            is important that an unguessable value be used.
            -->
          </t>

          <t>
            DNS 名前解決やトランスポート層で漏えいが生じる場合、攻撃者が OP に成りすまし、攻撃者自身がアソシエーションを発行したり、ステートレスモードで自ら署名検証を行なったりできるため、メッセージへの署名では不十分である。攻撃者がディスカバリプロセスを改竄できる場合、攻撃者は任意のOP を指定することができ、OP に成りすます必要がなくなる。さらに、攻撃者が XRDS 文書を変更することによって、情報の完全性を損なうことができる場合、中間者さえ必要がなくなる。この種の攻撃を防ぐ方法のひとつとして、<xref target="RFC3275">XMLDSIG</xref> に示されるような XRDS ファイルへのデジタル署名があげられる。これらの署名に用いられている鍵を信頼するかどうかを最終的に判断する必要があるのは RP であるため、鍵となる材料 (keying materials) は指定しない。
            <!--
            If DNS resolution or the transport layer is compromised
            signatures on messages are not adequate, since the
            attacker can impersonate the OP and issue its own
            associations, or its own decisions in Stateless Mode. If
            an attacker can tamper with the discovery process they can
            specify any OP, and so does not have to impersonate the
            OP.  Additionally, if an attacker can compromise the
            integrity of the information returned during the discovery
            process, by altering the XRDS document, the need for a man
            in the middle is removed.  One method to prevent this sort
            of attack is by digitally signing the XRDS file as per
            <xref target="RFC3275">XMLDSIG</xref>. The keying material
            is not specified, since the RP ultimately needs to make
            its own decision whether to trust keys used for such
            signature.
            -->
          </t>

          <t>
            SSL と信頼できる機関が署名した証明書を用い、DNS 検索結果と証明書を照らし合わせて検証することによって、こうした攻撃は、避けることができる。証明書の妥当性が立証されれば、改竄は不可能である。SSL サーバに成りすますためには、証明書を偽造したり、盗んだりする必要があるが、これらはネットワークベースの攻撃よりも遥かに困難である。
            <!--
            Using SSL with certificates signed by a trusted authority
            prevents these kinds of attacks by verifying the results
            of the DNS look-up against the certificate. Once the
            validity of the certificate has been established,
            tampering is not possible. Impersonating an SSL server
            requires forging or stealing a certificate, which is
            significantly harder than the network based attacks.
            -->
          </t>

          <t>
            SSL による保護を受けるには、ユーザエージェントを通じたエンドユーザとの双方向の通信をはじめ、双方向の通信の全ての部分で SSL を用いなければならない。本プロトコルでは必須とはしていないが、SSL の使用が強く推奨される (RECOMMENDED)。エンドポイント URL およびエンドユーザのユーザエージェントとの双方向の通信のセキュリティを確保するために、OP は、SSLと信頼できる機関が署名した証明書を用いるべきである (SHOULD) ことが、現時点のベストプラクティスから明らかになっている。さらに、SSLと信頼できる機関が署名した証明書を用いることにより、RP は、エンドユーザの URL を安全な方法で取り出すことができる。RP は、種々のエンドポイントにおいて SSL が正しく用いられていない場合、RP 自身のセキュリティポリシに基づいて、トランザクションを完了しない、あるいは、トランザクションの開始さえしないことを選択してもよい (MAY)。
            <!--
            In order to get protection from SSL, SSL must be used for
            all parts of the interaction, including interaction with
            the end user through the User-Agent.  While the protocol
            does not require SSL be used, its use is strongly
            RECOMMENDED.  Current best practices dictate that an OP
            SHOULD use SSL, with a certificate signed by a trusted
            authority, to secure its Endpoint URL as well as the
            interactions with the end user's User-Agent.  In addition,
            SSL, with a certificate signed by a trusted authority,
            SHOULD be used so that a Relying Party can fetch the end
            user's URL in a secure manner.  Following its own security
            policies, a Relying Party MAY choose to not complete, or
            even begin, a transaction if SSL is not being correctly
            used at these various endpoints.
            -->
          </t>

          <section title="不正なリライングパーティーのプロキシ化" anchor="rp_mitm_proxy">
          <!-- section title="Rogue Relying Party Proxying" anchor="rp_mitm_proxy" -->
            <t>
              特殊な形態の中間者攻撃のひとつとして、RP が不正な中間者（ MITM ）としての役割を果たす、というのがあげられる。RP は、エンドユーザの主張識別子に関してディスカバリを実行し、ユーザエージェントを OP にリダイレクトするのではなく、代わりに自分自身を通して OP をプロキシする。その結果、エンドユーザが OP に提供するクレデンシャルを、RP は入手することができるのである。この種の攻撃を防ぐにはいくつかの方法があるが、本文書で記述する対象範囲外である。これらの防御方法はいずれも、OP がエンドユーザとの間にセキュリティが確保されたチャネルを確立することが必要である。
              <!--
              A special type of man-in-the-middle attack is one where
              the Relying Party is a rogue party acting as a MITM.  The
              RP would perform discovery on the End User's Claimed
              Identifier and instead of redirecting the User Agent to
              the OP, would instead proxy the OP through itself.  This
              would thus allow the RP to capture credentials the End
              User provides to the OP.  While there are multiple ways to
              prevent this sort of attack, the specifics are outside the
              scope of this document.  Each method of prevention
              requires that the OP establish a secure channel with the
              End User.
              -->
            </t>
          </section>
        </section>
      </section>

      <section title="ユーザエージェント">
      <!-- section title="User-Agents" -->
        <t>
          本プロトコルは対話的に用いられることを意図しているため、ユーザエージェント (User-Agents) は、主として、一般に普及しているウェブブラウザとなるだろう。ウェブブラウザやそのホストは、スパイウェアやマルウェアに感染している可能性がある。その場合、ソフトウェアが信頼できず、認証がエンドユーザの承諾に基づいて行われたかどうかを知ることが不可能であるため、認証アサーションの強度は制限を受ける。従って、現状では、多くのウェブアプリケーションやプロトコルは、ウェブブラウザやそのホストのセキュリティに依存しているのである。
          <!--
          Since this protocol is intended to be used interactively,
          User-Agents will primarily be common Web browsers. Web
          browsers or their hosts may be infected with spyware or
          other malware, which limits the strength of the
          authentication assertion, since untrusted software makes it
          impossible to know whether the authentication decision has
          been made with the end user's approval. With that said, many
          web applications and protocols today rely on the security of
          the Web browser and their hosts.
          -->
        </t>

        <t>
          OP に対するクロスサイトスクリプティングアタックが、同様の効果を狙って行われる可能性がある。セキュリティを安全に保つために、OP は、スクリプトに依存すべきではない。こうすれば、スクリプトをサポートしていないユーザエージェントやスクリプトを使用不可に設定したユーザエージェントでもプロトコルを利用することができる。
          <!--
          Cross-site-scripting attacks against OPs may be used to the
          same effect. For the best security, OPs should not depend
          on scripting.  This enables User-Agents that do not support
          scripting, or have scripting disabled, to still employ the
          protocol.
          -->
        </t>
      </section>

      <section title="ユーザインタフェースに関する考慮事項">
      <!-- section title="User Interface Considerations" -->
        <t>
          RP は、ブラウザのトップレベルのウインドウにおいて全てのコントロールを表示し、エンドユーザを OP エンドポイント URL にリダイレクトすべきである (SHOULD)。こうすれば、一見 OP のように見えるサイト（フィッシング）に対するエンドユーザの保護が向上する。
          <!--
          The Relying Party SHOULD redirect the end user to the OP
          Endpoint URL in a top-level browser window with all controls
          visible. This allows better protection for the end user
          against OP look-alike sites (phishing).
          -->
        </t>

        <t>
          OpenIDプロバイダは、OpenID のフィッシングアタックの可能性について、エンドユーザを教育すべきである (SHOULD)。また、こうした攻撃を防ぐため、OP の認証サービスエンドポイント URL を検証するブラウザのプラグインなどのツールをエンドユーザに装備させるべきである (SHOULD)。
          <!--
          OpenID Providers SHOULD educate their end users about the
          potential for OpenID phishing attacks and SHOULD equip their
          end users with the tools to defeat such attacks, for example
          browser plug-ins that verify the authenticity of the OP's
          Authentication Service Endpoint URL.
          -->
        </t>
      </section>

      <section title="HTTP および HTTPS URL 識別子">
      <!-- section title="HTTP and HTTPS URL Identifiers" -->
        <t>
          これらのタイプ識別子については、<xref target='http_s_identifiers'>既に述べた通り</xref>であるが、再度触れておく価値がある。前述の通り、エンドユーザがスキーム以外は同一の URL を管理していることを表明するための方法としては、HTTP URL から HTTPS URL へのリダイレクトを発行することが推奨される (RECOMMENDED)。RP は、ディスカバリと開始フェーズでHTTP URLを決して保存するようなことはなく、リダイレクトを辿って、HTTPS URL を主張識別子として用いる。
          <!--
          While these types of Identifiers have been <xref
          target='http_s_identifiers'>previously discussed</xref>,
          they are worth mentioning again.  As previously stated, the
          RECOMMENDED method of an End User expressing control over a
          URL differing only be scheme is to setup a redirect from the
          HTTP URL to the HTTPS URL.  Relying Parties will never store
          the HTTP URL as during the discovery and initiation phase
          will follow the redirect and use the HTTPS URL as the
          Claimed Identifier.
          -->
        </t>

        <t>
          本推奨事項に関心を持つエンドユーザは、自身の HTTPS URL をそれぞれの RP で直接入力すべきである。そうすれば、RP が HTTPS URL ヘのリダイレクトを辿る段階が省かれる。現時点で考慮すべき唯一のセキュリティに関する考慮事項は、攻撃者がリダイレクトを実施せず、識別子を不正な OP に向けることで、HTTP URL の完全性を損なう場合である。しかし、こうした攻撃は、ユーザエクスペリエンスを変化させるであろうし、アンチフィッシング技術を用いれば検知可能である。そして、OpenID においては、識別子自体のセキュリティが基本原則なのである。
          <!--
          End users with concerns over this recommendation should
          directly enter their HTTPS URL at each Relying Party.  This
          thus removes the step where the Relying Party follows the
          redirect to the HTTPS URL.  The single security
          consideration currently seen is if an attacker were to
          compromise the integrity of the HTTP URL by removing the
          redirect and pointing the Identifier at a rogue OP.  This
          however will alter the user experience, is detectable by
          anti-phishing technologies, and the security of the
          Identifier itself is a fundamental principle within OpenID.
          -->
        </t>
      </section>

      <section title="サービス妨害攻撃 （DoS 攻撃）">
      <!-- section title="Denial of Service Attacks" -->
        <t>
          本プロトコルには、不正な RP が OP に対してサービス妨害攻撃を始めることができる部分がある。本当の要求であるかどうかを OP が迅速にチェックするための手段が OpenID プロトコルメッセージにないためである。サービス妨害攻撃は、RP がアソシエーションや認証、署名検証を繰り返し要求することによって可能となるのである。
          <!--
          Within the protocol there are places where a rogue RP could
          launch a denial of service attack against an OP since there
          is nothing in OpenID protocol messages that allows the OP to
          quickly check that it is a genuine request.  This can be
          done by the RP repeatedly requesting associations,
          authentication, or verification of a signature.
          -->
        </t>

        <t>
          こうした攻撃が最も重大な影響を与える可能性があるのは、各メッセージに対しOP が離散指数の演算を行う必要があるアソシエーションフェーズである。RP はメッセージごとにモジュラスやジェネレータを指定することができるので、攻撃者はOP に対し、各メッセージへの応答に優先して累乗計算をリアルタイムに実行するよう強制すらできる。
          <!--
          The potentially most severe attack is during the association
          phase as each message requires the OP to execute a discrete
          exponentiation.  Since the RP has the ability to specify
          modulus and generator per message, an attacker can even
          force the OP to perform this exponentiation in real time
          prior to responding for each message.
          -->
        </t>

        <t>
          こうした攻撃は極めて有害であるが、OpenID プロバイダは、汎用の IP ベースの大量アクセス制限、禁止技術を用いて、この種の攻撃に容易に対抗することができる。OP は、"openid.realm" および "openid.return_to" の値をもとに禁止されている要求を調べることもできる。
          <!--
          While this could be particularly harmful, OpenID Providers
          can easily use generic IP based rate-limiting and banning
          techniques to help combat these sorts of attacks.  OPs can
          also look at banning requests based on the "openid.realm"
          and "openid.return_to" values.
          -->
        </t>
      </section>

      <section title="プロトコルの可変項目">
      <!-- section title="Protocol Variants" -->
        <t>
          プロトコルにおいては以下のバリエーションが知られており、これらのバリエーションは、プロトコルの使用に当たってのセキュリティに直接影響をあたえる場合も与えない場合もある。こうした値は、本プロトコルのためのセキュリティプロファイルの作成に用いられる可能性があると推測される。次の表は、OpenID プロバイダ側から見た可変項目のリストである。
          <!--
          The following are known variations in the protocol which may
          or may not directly affect the security of the use of the
          protocol.  It is imagined that these values could be used in
          the creation of security profiles for this protocol.  The
          following list of variants are from the perspective of an
          OpenID Provider.
          -->
        </t>

        <texttable>
          <ttcol align='left'>番号</ttcol>
          <!-- ttcol align='left'>Number</ttcol -->
          <ttcol align='left'>可変項目</ttcol>
          <!-- ttcol align='left'>Variant</ttcol -->
          <ttcol align='left'>値</ttcol>
          <!-- ttcol align='left'>Values</ttcol -->

          <c>1.</c>
          <c>
            realm でのワイルドカードの使用は認められるか。
            <!--
            Are wildcards allowed in realms?
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>2.</c>
          <c>
            事前のアソシエーションが必要か。OP は RP に対し、認証要求を行なう前に最初にアソシエーションの構築を求めるか。
            <!--
            Require prior association?  Does the OP require the RP
            first create an association before requesting
            authentication?
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>3.</c>
          <c>
            受け入れられる主張識別子のタイプ
            <!--
            Types of claimed identifiers accepted.
            -->
          </c>
          <c>
            HTTP/HTTPS/XRI のセット
            <!--
            Set of HTTP/HTTPS/XRI
            -->
          </c>

          <c>4.</c>
          <c>
            認証において自ら発行した証明書は認められるか。これは全 SSL トラフィックに適用される。本項目が 'no' の場合、OP は“恐らく” 全ての HTTPS 識別子に対し、既知の信頼するルートCA(証明書発行局)までの証明書の連鎖を要求するが、そのことについては意図的に前提としないでおく。
            <!--
            Are self-issued certificates allowed for authentication?
            This applies to all SSL traffic. If 'no' here, then OP
            *probably* requires all HTTPS identifiers to chain up to
            known trust roots, but that's intentionally not implied.
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>5.</c>
          <c>
            XRDS ファイルに署名しなければならないか。XRDS に関する署名は XMLDSIG に従う。これらの署名に用いられている鍵を信頼するかどうかを最終的にRPが自ら判断しなければならないため、鍵となる材料は指定しない。
            <!--
            Must the XRDS file be signed? Signature on the XRDS as per
            XMLDSIG. Keying material not specified, since the RP
            ultimately needs to make own decision whether to trust
            keys used for such signature.
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>6.</c>
          <c>
            セキュリティが確保されたチャネルを経由して XRDS ファイルを取得しなければならないか。これは SSL を前提としないか。
            <!--
            Must the XRDS file be retrieved over secure channel? This does not
            imply SSL?
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>7.</c>
          <c>
            アソシエーションを構築するとき、どのタイプのセッション形式を用いることができるか。
            <!--
            What types of session types can be used when creating
            associations?
            -->
          </c>
          <c>
            no-encryption/DH-SHA1/DH-SHA256 のセット
            <!--
            Set of no-encryption/DH-SHA1/DH-SHA256
            -->
          </c>

          <c>8.</c>
          <c>
            RP は、XRDS 文書を持っていなければならないか。
            <!--
            Must the RP have an XRDS document?
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <c>9.</c>
          <c>
            OP が署名への使用に合意しているアソシエーション形式は何か。
            <!--
            What association types the OP agrees to use for
            signatures?
            -->
          </c>
          <c>
            HMAC-SHA1/HMAC-SHA256 のセット
            <!--
            Set of HMAC-SHA1/HMAC-SHA256
            -->
          </c>

          <c>10.</c>
          <c>
            アソシエーション要求は、セキュリティが確保されたチャネルを経由して行なわなければならないか。
            <!--
            Must the association request take place over secure channel?
            -->
          </c>
          <c>
            Yes/No のいずれか
            <!--
            One of Yes/No
            -->
          </c>

          <postamble>
            特定されたセキュリティの可変項目
            <!--
            Identified security variants.
            -->
          </postamble>
          </texttable>
      </section>
    </section>

    <appendix title="使用例">
    <!-- appendix title="Examples" -->
      <t>参考<!-- Non-normative --></t>

      <appendix title="正規化" anchor="normalization_example">
      <!-- appendix title="Normalization" anchor="normalization_example" -->
        <t>
          テキスト URL の正規化の詳細およびさらなる事例については、<xref target="RFC3986" /> Section 6 を参照。
          <!--
          See section 6 of <xref target="RFC3986" /> for
          textual URL normalization details and more examples.
          -->
        </t>
        <texttable title="User's Input to Identifier Normalization">
          <ttcol align="left">ユーザ入力</ttcol>
          <!-- ttcol align="left">User's Input</ttcol -->
          <ttcol align="left">Identifier</ttcol>
          <!-- ttcol align="left">Identifier</ttcol -->
          <ttcol align="left">Type</ttcol>
          <!-- ttcol align="left">Type</ttcol -->
          <ttcol align="left">Discussion</ttcol>
          <!-- ttcol align="left">Discussion</ttcol -->

          <c>example.com</c>
          <c>http://example.com/</c>
          <c>URL</c>
          <c>スキームがない URI は http URI に正規化<!-- A URI with a missing scheme is normalized to a http URI --></c>

          <c>http://example.com</c>
          <c>http://example.com/</c>
          <c>URL</c>
          <c>パスコンポーネントがない場合、スラッシュに正規化<!-- An empty path component is normalized to a slash --></c>

          <c>https://example.com/</c>
          <c>https://example.com/</c>
          <c>URL</c>
          <c>https URI は https URI のまま<!-- https URIs remain https URIs --></c>

          <c>http://example.com/user</c>
          <c>http://example.com/user</c>
          <c>URL</c>
          <c>パスコンポーネントがある場合、末尾にスラッシュは追加されない<!-- No trailing slash is added to non-empty path components--></c>

          <c>http://example.com/user/</c>
          <c>http://example.com/user/</c>
          <c>URL</c>
          <c>パスコンポーネントがある場合、末尾のスラッシュは保持される<!-- Trailing slashes are preserved on non-empty path components--></c>

          <c>http://example.com/</c>
          <c>http://example.com/</c>
          <c>URL</c>
          <c>パスがない場合、末尾のスラッシュは保持される<!-- Trailing slashes are preserved when the path is empty --></c>

          <c>=example</c>
          <c>=example</c>
          <c>XRI</c>
          <c>グローバルコンテキストシンボルで開始するように XRI を正規化<!-- Normalized XRIs start with a global context symbol --></c>

          <c>xri://=example</c>
          <c>=example</c>
          <c>XRI</c>
          <c>グローバルコンテキストシンボルで開始するように XRI を正規化<!-- Normalized XRIs start with a global context symbol --></c>

          <postamble>
            ユーザ入力の識別子への正規化
            <!--
            User's Input to Identifier Normalization
            -->
          </postamble>
        </texttable>
      </appendix>

      <appendix title="OP ローカル識別子">
      <!-- appendix title="OP-Local Identifiers" -->
        <t>
          エンドユーザが "http://www.example.com/" を主張識別子として使用したい。エンドユーザが OpenID プロバイダとしての機能を有する プロバイダ(example.com)にアカウントを持っている。エンドユーザの OP ローカル識別子 が "https://exampleuser.exampleprovider.com/" である。
          <!--
          An end user wants to use "http://www.example.com/" as their
          Claimed Identifier. The end user has an account with
          Example Provider, which functions as an OpenID Provider.  The
          end user's OP-Local Identifier is
          "https://exampleuser.exampleprovider.com/".
          -->
        </t>

        <t>
          このシナリオにおいて、適切な構成で Yadis または HTML ベースのディスカバリ（<xref target="discovery" /> および下記 <xref target="XRDS_Sample" /> 参照）を実行すると、RP はエンドユーザに関して以下の情報が得られる。
          <!--
          In this scenario, with the proper configuration of Yadis or
          HTML-Based Discovery (see <xref target="discovery" /> and
          <xref target="XRDS_Sample" /> below), a Relying Party will
          discover the following information about the end user:
          -->

          <list style="hanging">
            <t hangText="主張識別子">
            <!-- t hangText="Claimed Identifier" -->
              http://www.example.com/
            </t>
            <t hangText="OP ローカル識別子">
            <!-- t hangText="OP-Local Identifier" -->
              https://exampleuser.exampleprovider.com/
            </t>
          </list>
        </t>
      </appendix>

      <appendix title="XRDS" anchor="XRDS_Sample">
        <figure>
          <preamble>
            エンドユーザは "http://www.example.com/" を識別子として使用するが、RP には実際に OP エンドポイント URL "https://www.exampleprovider.com/endpoint/" で "https://exampleuser.exampleprovider.com/" を検証させるためには、"http://www.example.com/" に関するディスカバリを実行したとき、XRDS ファイルの最後の XRD エレメントに、以下の XML 断片が記されているべきである。
            <!--
            For an end user to use "http://www.example.com/" as
            their Identifier, but have Relying Parties actually
            verify "https://exampleuser.exampleprovider.com/" with the OP
            Endpoint URL
            "https://www.exampleprovider.com/endpoint/", the
            following XML snippet should be present in the final XRD
            element in the XRDS file when discovery is preformed on
            "http://www.example.com/":
            -->
          </preamble>
          <artwork><![CDATA[
<Service xmlns="xri://$xrd*($v*2.0)">
  <Type>http://specs.openid.net/auth/2.0/signon</Type>
  <URI>https://www.exampleprovider.com/endpoint/</URI>
  <LocalID>https://exampleuser.exampleprovider.com/</LocalID>
</Service>
]]></artwork>
        </figure>
      </appendix>

      <appendix title="HTML 識別子のマークアップ">
      <!-- appendix title="HTML Identifier Markup" -->
        <figure>
          <preamble>
            "http://www.example.com/" を識別子として用いるが、RP には実際に "http://www.livejournal.com/openid/server.bml" で位置が指定される OpenID プロバイダで "http://exampleuser.livejournal.com/" を検証させるためには、識別子 URL によって位置が指定される HTML 文書の &lt;head&gt; 部分に、以下のマークアップが記されているべきである。
            <!--
            To use "http://www.example.com/" as their Identifier, but have
            Relying Parties actually verify
            "http://exampleuser.livejournal.com/" with the OpenID
            Provider located at
            "http://www.livejournal.com/openid/server.bml", the
            following markup should be present in the &lt;head&gt;
            of the HTML document located by the identifier URL:
            -->
          </preamble>
          <artwork><![CDATA[
<link rel="openid2.provider openid.server"
      href="http://www.livejournal.com/openid/server.bml"/>
<link rel="openid2.local_id openid.delegate"
      href="http://exampleuser.livejournal.com/"/>
]]></artwork>
        </figure>
      </appendix>

      <appendix title="XRI 正準化 ID">
      <!-- appendix title="XRI CanonicalID" -->
        <t>
          例えば、=example と =exmpl という XRI i-name がともに xri://(example)!1234 という正準化 ID を含む XRDS 文書を生成する場合、これらの識別子は同等として扱うべきである。ユーザアカウントを有するアプリケーションでは、永続的な正準化 ID 、xri://(example)!1234 を、そのアカウントの主キーとして用いるべきである。i-names =example および =exmpl を表示名として参照するために保存してもよいが、これらは再割り当て可能な識別子であり、永続的な鍵として用いるべきではない。
          <!--
          For example, if the XRI i-names =example and =exmpl both
          yield an XRDS document with the CanonicalID
          xri://(example)!1234 then those Identifiers should be
          treated as equivalent. For applications with user accounts,
          the persistent Canonical ID xri://(example)!1234 should be
          used the primary key for the account.  Although the
          i-names =example and =exmpl may also be stored for reference
          as display names, they are reassignable identifiers and
          should not be used as persistent keys.
          -->
        </t>
      </appendix>
    </appendix>

    <appendix title='Diffie-Hellman 鍵交換のデフォルト値' anchor="pvalue">
    <!-- appendix title='Diffie-Hellman Key Exchange Default Value' anchor="pvalue" -->
      <figure>
        <preamble>
          これは確認済みの素数で、Diffie-Hellman 鍵交換においてデフォルトのモジュラスとして用いられる。16 進表現では、以下の通りである。
          <!--
          This is a confirmed-prime number, used as the default
          modulus for Diffie-Hellman Key Exchange. In hexadecimal:
          -->
        </preamble>
        <artwork>
DCF93A0B883972EC0E19989AC5A2CE310E1D37717E8D9571BB7623731866E61E
F75A2E27898B057F9891C2E27A639C3F29B60814581CD3B2CA3986D268370557
7D45C2E7E52DC81C7A171876E5CEA74B1448BFDFAF18828EFD2519F14E45E382
6634AF1949E5B535CC829A483B8A76223E5D490A257F05BDFF16F2FB22C583AB
        </artwork>
      </figure>
    </appendix>

    <!-- XXX: An example for Generating Signatures might be nice. -->

    <appendix title="謝辞">
    <!-- appendix title="Acknowledgements" -->
      <t>
        OpenID コミュニティは、本仕様の草案作成および編集における、以下の人々の取り組みに謝意を表します。誰がどの部分を実際に書いたのか、その詳細が知りたい場合は、自由に当コミュニティの SVN リポジトリを調べたり、"svn blame" を使用したりして下さい。http://openid.net/svn/specifications/authentication/2.0/
        <!--
        The OpenID Community would like to thank the following people
        for the work they've done in the drafting and editing of this
        specification.  If you want to know the nitty gritty of who
        actually wrote what, feel free to look at our SVN repository
        or even use "svn blame". :)
        http://openid.net/svn/specifications/authentication/2.0/
        -->
      </t>

      <t>
      <list style='empty'>
        <t>Barry Ferg (barry@sxip.com)</t>
        <t>Brad Fitzpatrick (brad@danga.com) &lt;author&gt;</t>
        <t>Carl Howells (chowells@janrain.com)</t>
        <t>David Recordon (david@sixapart.com) &lt;author/editor&gt;</t>
        <t>Dick Hardt (dick@sxip.com) &lt;author&gt;</t>
        <t>Drummond Reed (drummond.reed@cordance.net)</t>
        <t>Hans Granqvist (hgranqvist@verisign.com)</t>
        <t>Johannes Ernst (jernst@netmesh.us)</t>
        <t>Johnny Bufu (johnny@sxip.com) &lt;editor&gt;</t>
        <t>Josh Hoyt (josh@janrain.com) &lt;author/editor&gt;</t>
        <t>Kevin Turner (kevin@janrain.com)</t>
        <t>Marius Scurtescu (marius@sxip.com)</t>
        <t>Martin Atkins (mart@degeneration.co.uk)</t>
        <t>Mike Glover (mpg4@janrain.com)</t>
      </list>
      </t>
    </appendix>
  </middle>

  <back>
    <references title='参考文献'>
    <!-- references title='Normative References' -->
      <reference anchor='RFC3629'>
        <front>
          <title>
            UTF-8, a transformation format of Unicode and ISO 10646
          </title>
          <author initials='F.Y' surname='Yergeau' fullname='Francois Yergeau'>
            <organization />
          </author>
        </front>
        <seriesInfo name="RFC" value="3629" />
      </reference>
      <reference anchor='RFC2119'>
        <front>
          <title>
            Key words for use in RFCs to Indicate Requirement Levels
          </title>
          <author initials='B.S' surname='Bradner' fullname='Scott Bradner'>
            <organization>Alis Technologies</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="2119" />
      </reference>
      <reference anchor='RFC3986'>
        <front>
          <title>Uniform Resource Identifiers (URI): Generic Syntax</title>
          <author initials='T.L' surname='Berners-Lee'
                  fullname='T. Berners-Lee'>
            <organization />
          </author>
        </front>
        <seriesInfo name="RFC" value="3986" />
      </reference>
      <reference anchor='RFC1750'>
        <front>
          <title>Randomness Recommendations for Security</title>
          <author initials='D.E' surname='Eastlake'
                  fullname='Donald E. Eastlake, 3rd'>
            <organization>Digital Equipment Corporation</organization>
          </author>
          <author initials='S.C' surname='Crocker'
                  fullname='Stephen D. Crocker'>
            <organization>CyberCash, Inc.</organization>
          </author>
          <author initials='J.S' surname='Schiller'
                  fullname='Jeffery I. Schiller'>
            <organization>Massachusetts Institute of Technology</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="1750" />
      </reference>
      <reference anchor='RFC2631'>
        <front>
          <title>Diffie-Hellman Key Agreement Method</title>
          <author initials='E.R' surname='Rescorla'
                  fullname='Eric Rescorla'>
            <organization />
          </author>
        </front>
        <seriesInfo name="RFC" value="2631" />
      </reference>
      <reference anchor='RFC3548'>
        <front>
          <title>The Base16, Base32, and Base64 Data Encodings</title>
          <author initials='S.J' surname='Josefsson'
                  fullname='Simon Josefsson'>
            <organization />
          </author>
        </front>
        <seriesInfo name="RFC" value="3548" />
      </reference>
      <reference anchor='RFC2104'>
        <front>
          <title>HMAC: Keyed-Hashing for Message Authentication</title>
          <author initials='H.K' surname='Krawczyk' fullname='Hugo Krawczyk'>
            <organization>IBM</organization>
          </author>
          <author initials='M.B' surname='Bellare' fullname='Mihir Bellare'>
            <organization>UCSD</organization>
          </author>
          <author initials='R.C' surname='Canetti' fullname='Ran Canetti'>
            <organization>IBM</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="2104" />
      </reference>
      <reference anchor='FIPS180-2'>
        <front>
          <title>Secure Hash Signature Standard</title>
          <author>
            <organization>U.S. Department of Commerce</organization>
          </author>
          <author>
            <organization>National Institute of Standards
              and Technology</organization>
          </author>
        </front>
        <seriesInfo name="FIPS" value="180-2" />
        <format type="PDF" target="http://csrc.nist.gov/publications/fips/fips180-2/fips180-2withchangenotice.pdf" />
        <annotation>Defines Secure Hash Algorithm 256 (SHA256)</annotation>
      </reference>
      <reference anchor='HTML401'>
        <front>
          <title>HTML 4.01 Specification</title>
          <author>
            <organization>W3C</organization>
          </author>
        </front>
        <format type="HTML" target="http://www.w3.org/TR/html401" />
      </reference>
      <reference anchor='RFC2616'>
        <front>
          <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
          <author initials='R.F' surname='Fielding' fullname='R. Fielding'>
            <organization>UC Irvine</organization>
          </author>
          <author initials='J.G' surname='Gettys' fullname='J. Gettys'>
            <organization>Compaq/W3C</organization>
          </author>
          <author initials='J.M' surname='Mogul' fullname='J. Mogul'>
            <organization>Compaq</organization>
          </author>
          <author initials='H.F' surname='Frystyk' fullname='H. Frystyk'>
            <organization>W3C/MIT</organization>
          </author>
          <author initials='L.M' surname='Masinter' fullname='L. Masinter'>
            <organization>Xerox</organization>
          </author>
          <author initials='P.L' surname='Leach' fullname='P. Leach'>
            <organization>Microsoft</organization>
          </author>
          <author initials='T.L' surname='Berners-Lee'
                  fullname='T. Berners-Lee'>
            <organization>W3C/MIT</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="2616" />
      </reference>
      <reference anchor='RFC3174'>
        <front>
          <title>US Secure Hash Algorithm 1 (SHA1)</title>
          <author initials='D.E' surname='Eastlake'
                  fullname='Donald E. Eastlake, 3rd'>
            <organization>Motorola</organization>
          </author>
          <author initials='P.J' surname='Jones' fullname='Paul E. Jones'>
            <organization>Cisco Systems, Inc.</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="3174" />
      </reference>
      <reference anchor='RFC3339'>
        <front>
          <title>Date and Time on the Internet: Timestamps</title>
          <author initials='G.K' surname='Klyne' fullname='Graham Klyne'>
            <organization>Clearswift Corporation</organization>
          </author>
          <author initials='C.N' surname='Newman'
                  fullname='Chris Newman'>
            <organization>Sun Microsystems</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="3339" />
      </reference>

      <reference anchor="RFC3275">
        <front>
          <title>(Extensible Markup Language) XML-Signature Syntax and
          Processing</title>
          <author initials='D.E.' surname='Eastlake 3rd'
                  fullname='Donald E. Eastlake 3rd'>
            <organization>Motorola</organization>
          </author>
          <author initials='J.R.' surname='Reagle Jr.' fullname='Joseph M. Reagle Jr.'>
            <organization>Massachusetts Institute of
            Technology</organization>
          </author>
          <author initials='D.S.' surname='Solo' fullname='David
                                                                 Solo'>
            <organization>Citigroup</organization>
          </author>
        </front>
        <seriesInfo name="RFC" value="3275" />
      </reference>

      <reference anchor="XRI_Syntax_2.0"
                 target="http://www.oasis-open.org/committees/download.php/15376" >

        <front>
          <title>Extensible Resource Identifier (XRI) Syntax V2.0</title>
          <author initials='D.R' surname='Reed' fullname="Drummond Reed">
            <organization>Cordance</organization>
          </author>
          <author initials='D.M' surname='McAlpin' fullname="Dave McAlpin">
            <organization>Epok</organization>
          </author>
        </front>
        <format type="HTML" target=
                "http://www.oasis-open.org/committees/download.php/15376" />
        <format type="PDF" target=
                "http://www.oasis-open.org/committees/download.php/15377" />
      </reference>

      <reference anchor="XRI_Resolution_2.0"
                 target="http://www.oasis-open.org/committees/download.php/17293" >
        <front>
          <title>Extensible Resource Identifier (XRI) Resolution V2.0
          - Committee Draft 02</title>
          <author initials='G.W' surname='Wachob' fullname="Gabe Wachob">
            <organization>Visa International</organization>
          </author>
          <author initials='D.R' surname='Reed' fullname="Drummond Reed">
            <organization>Cordance</organization>
          </author>
          <author initials='L.C' surname='Chasen' fullname="Les Chasen">
            <organization>NeuStar</organization>
          </author>
          <author initials='W.T' surname='Tan' fullname="William Tan">
            <organization>NeuStar</organization>
          </author>
          <author initials='S.C' surname='Churchill' fullname="Steve Churchill">
            <organization>XDI.ORG</organization>
          </author>
        </front>
        <format type="HTML" target=
                "http://docs.oasis-open.org/xri/2.0/specs/cd02/xri-resolution-V2.0-cd-02.html" />
        <format type="PDF" target=
                "http://docs.oasis-open.org/xri/2.0/specs/cd02/xri-resolution-V2.0-cd-02.pdf" />
      </reference>

      <reference anchor="Yadis">
        <front>
          <title>Yadis Specification 1.0</title>
          <author initials='J.M' surname='Miller' fullname="Joaquin Miller">
            <organization>NetMesh</organization>
          </author>
        </front>
        <format type='PDF' target="http://yadis.org/papers/yadis-v1.0.pdf" />
        <format type='ODT' target="http://yadis.org/papers/yadis-v1.0.odt" />
      </reference>
    </references>
  </back>
</rfc>
